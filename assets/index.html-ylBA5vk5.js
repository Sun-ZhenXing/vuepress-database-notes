import{_ as p,r as c,o as r,c as i,b as o,a as s,w as n,d as e,e as t}from"./app-Y4KcrCk8.js";const h={},g=t('<h1 id="3-mongodb-shell-的使用" tabindex="-1"><a class="header-anchor" href="#3-mongodb-shell-的使用" aria-hidden="true">#</a> 3. MongoDB Shell 的使用</h1><div class="hint-container warning"><p class="hint-container-title">弃用警告</p><p>传统的 <code>mongo</code> 命令在 MongoDB 5.0 中被弃用，并在 MongoDB 6.0 中被删除，因此本文不使用旧的命令。新 Shell 改进了：</p><ul><li>与 MongoDB Node.js 驱动程序兼容</li><li>语法突出显示</li><li>命令历史</li><li>Logging</li></ul><p>在 <code>mongosh</code> 中，一些遗留方法不可用或已被更新的方法替换。</p></div>',2),D={class:"table-of-contents"},u=o("h2",{id:"31-安装-mongodb-shell",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#31-安装-mongodb-shell","aria-hidden":"true"},"#"),e(" 3.1 安装 MongoDB Shell")],-1),m=o("p",null,"MongoDB Shell 是 MongoDB 的交互式 JavaScript 接口。MongoDB Shell 可以查询和更新数据以及执行管理操作。",-1),_={href:"https://www.mongodb.com/try/download/shell",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="32-连接到-mongodb" tabindex="-1"><a class="header-anchor" href="#32-连接到-mongodb" aria-hidden="true">#</a> 3.2 连接到 MongoDB</h2><p>直接使用 <code>mongosh</code> 命令即可连接到 MongoDB：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mongosh</span></span>
<span class="line"></span></code></pre></div><p>这相当于直接指定 URL：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mongosh</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;mongodb://localhost:27017&quot;</span></span>
<span class="line"></span></code></pre></div><p>或者使用 <code>--port</code> 指定端口，并使用 <code>--host</code> 指定主机：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mongosh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--host</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">mongodb0.example.com</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--port</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">28015</span></span>
<span class="line"></span></code></pre></div><p>要连接到需要身份验证的 MongoDB，使用 <code>--username</code> 和 <code>--authenticationDatabase</code> 选项。<code>mongosh</code> 会提示输入密码。</p><p>例如，要在 <code>admin</code> 数据库上以用户 <code>alice</code> 身份进行身份验证，请运行以下命令：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mongosh</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;mongodb://mongodb0.example.com:28015&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--username</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">alice</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--authenticationDatabase</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">admin</span></span>
<span class="line"></span></code></pre></div><p>要在连接命令中提供口令而不是使用提示符，请使用 <code>--password</code> 选项。此选项用于以编程方式使用 <code>mongosh</code>，如驱动程序。</p>`,11),f={href:"https://www.mongodb.com/docs/mongodb-shell/reference/options/",target:"_blank",rel:"noopener noreferrer"},y=o("h2",{id:"33-连接到副本集",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#33-连接到副本集","aria-hidden":"true"},"#"),e(" 3.3 连接到副本集")],-1),x=o("strong",null,"副本集",-1),v=o("sup",{class:"footnote-ref"},[o("a",{href:"#footnote1"},"[1]"),o("a",{class:"footnote-anchor",id:"footnote-ref1"})],-1),k=t(`<p>MongoDB 从 3.6 开始，就支持 Mongo + SRV 的 DNS seed 列表的连接方式，这种方式可以连接到副本集、分片集群和单节点中。</p><p>对客户端来说它可以隐藏后端 Mongo 服务节点的变化，其显而易见的好处就是后端 Mongo 节点的变化无需修改客户端连接参数，也就无需进行应用的重新部署。</p><div class="hint-container tip"><p class="hint-container-title">Mongo + SRV 工作原理</p><p>其工作原理主要是利用 DNS 对 SRV/TXT 记录的支持，因此为了使用 <code>mongo+srv</code>，我们需要一个 DNS 服务器并在其中设置指向 MongoDB 后端节点的 SRV 记录。SRV 记录指出组成副本集的一个或者多个成员的服务器。TXT 记录定义了副本集的选项， 尤其是用于认证的数据库以及副本集名字</p></div><p>连接到副本集的方式如下：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mongosh</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;mongodb+srv://server.example.com/&quot;</span></span>
<span class="line"></span></code></pre></div><div class="hint-container info"><p class="hint-container-title">TLS 行为</p><p>当使用 <code>+srv</code> 连接字符串修饰符时，MongoDB 自动将 <code>--tls</code> 连接选项设置为 <code>true</code>。要覆盖此行为，请将 <code>--tls</code> 设置为 <code>false</code>。</p></div><p>可以在连接字符串中指定单个副本集成员。</p><p>例如，要连接到名为 <code>replA</code> 的三成员副本集，运行以下命令：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mongosh</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;mongodb://mongodb0.example.com.local:27017,mongodb1.example.com.local:27017,mongodb2.example.com.local:27017/?replicaSet=replA&quot;</span></span>
<span class="line"></span></code></pre></div><p>若要验证当前的数据库连接，请使用 <code>db.getMongo()</code> 方法。这将返回当前连接的连接字符串 URI。</p><p>要从服务退出连接并退出 <code>mongosh</code>，请执行以下操作之一以下操作：</p><ul><li>输入 <code>.exit</code>、<code>exit</code> 或 <code>exit()</code></li><li>输入 <code>quit</code> 或 <code>quit()</code></li><li>按 <code>Ctrl + D</code> 组合键</li><li>按 <code>Ctrl + C</code> 键两次</li></ul><div class="hint-container tip"><p class="hint-container-title">小技巧</p><ul><li>使用 <code>help</code> 和 <code>.help</code> 查看帮助</li><li>使用 <code>cls</code> 清空屏幕</li></ul></div><hr class="footnotes-sep">`,14),C={class:"footnotes"},E={class:"footnotes-list"},M={id:"footnote1",class:"footnote-item"},B={href:"https://cloud.tencent.com/developer/article/1181009",target:"_blank",rel:"noopener noreferrer"},S=o("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function A(w,q){const a=c("router-link"),l=c("ExternalLinkIcon"),d=c("Badge");return r(),i("div",null,[g,o("nav",D,[o("ul",null,[o("li",null,[s(a,{to:"#31-安装-mongodb-shell"},{default:n(()=>[e("3.1 安装 MongoDB Shell")]),_:1})]),o("li",null,[s(a,{to:"#32-连接到-mongodb"},{default:n(()=>[e("3.2 连接到 MongoDB")]),_:1})]),o("li",null,[s(a,{to:"#33-连接到副本集"},{default:n(()=>[e("3.3 连接到副本集")]),_:1})])])]),u,m,o("p",null,[e("MongoDB Shell 作为 MongoDB Server 安装的一部分包含在内，如果你使用 Docker 安装，并且想要在主机内安装，也可以 "),o("a",_,[e("独立安装"),s(l)]),e("。")]),b,o("p",null,[e("更多的选项参考请参见 "),o("a",f,[e("官方文档：MongoDB Shell 选项"),s(l)]),e("。")]),y,o("p",null,[s(d,{type:"tip"},{default:n(()=>[e("定义")]),_:1}),e(),x,e("（Replica Set）是 MongoDB 的核心高可用特性之一，它基于主节点的 oplog 日志持续传送到辅助节点，并重放得以实现主从节点一致。再结合心跳机制，当感知到主节点不可访问或宕机的情形下，辅助节点通过选举机制来从剩余的辅助节点中推选一个新的主节点从而实现自动切换，这个特性与 MySQL MHA 实现原理一致。"),v]),k,o("section",C,[o("ol",E,[o("li",M,[o("p",null,[e("MongoDB 复制集（Replica Set），"),o("a",B,[e("https://cloud.tencent.com/developer/article/1181009"),s(l)]),e(),S])])])])])}const V=p(h,[["render",A],["__file","index.html.vue"]]);export{V as default};
