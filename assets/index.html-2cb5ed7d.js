import{_ as l,r as o,o as p,c as e,b as s,a as c,w as D,d as n,f as r}from"./app-f357348a.js";const t={},i=s("h1",{id:"_2-安装-mongodb",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_2-安装-mongodb","aria-hidden":"true"},"#"),n(" 2. 安装 MongoDB")],-1),d=s("p",null,"本文目前只介绍 MongoDB 的 Docker 安装方式，其他安装方式请参考官方文档。",-1),y={class:"table-of-contents"},C=r(`<h2 id="_2-1-使用-docker-安装" tabindex="-1"><a class="header-anchor" href="#_2-1-使用-docker-安装" aria-hidden="true">#</a> 2.1 使用 Docker 安装</h2><p>MongoDB 的 Docker 镜像包含几个不同的版本，其中 <code>mongo</code> 是最常用的开源版本，社区版本的服务器是 <code>mongodb/mongodb-community-server</code>，企业版的服务器是 <code>mongodb/mongodb-enterprise-server</code>。</p><p>我们直接使用 <code>mongo</code> 镜像：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">pull</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">mongo</span></span>
<span class="line"></span></code></pre></div><p>常见的启动命令：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">run</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-d</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">--name</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">mongodb</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">-p</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">27017</span><span style="color:#CE9178;">:27017</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">\\</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">mongo</span></span>
<span class="line"></span></code></pre></div><p>如果本地安装了 MongoDB 客户端，可以通过 <code>mongosh</code> 命令连接：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">mongosh</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">--port</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">27017</span></span>
<span class="line"></span></code></pre></div><p>如果没有安装客户端，可以通过容器内的客户端连接：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">docker</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">exec</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">-it</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">mongodb</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">mongosh</span></span>
<span class="line"></span></code></pre></div><p>执行测试：</p><div class="language-javascript" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#9CDCFE;">db</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">runCommand</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">   {</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">hello:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">   }</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><p>输出：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">isWritablePrimary</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">topologyVersion</span><span style="color:#D4D4D4;">: {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C8C8C8;">processId</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">ObjectId</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;6517b60b54690f603399e62b&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C8C8C8;">counter</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">Long</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;0&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">  },</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">maxBsonObjectSize</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">16777216</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">maxMessageSizeBytes</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">48000000</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">maxWriteBatchSize</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">100000</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">localTime</span><span style="color:#D4D4D4;">: </span><span style="color:#DCDCAA;">ISODate</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&quot;2023-09-30T13:21:24.616Z&quot;</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">logicalSessionTimeoutMinutes</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">30</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">connectionId</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">minWireVersion</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">maxWireVersion</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">21</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">readOnly</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">false</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">ok</span><span style="color:#D4D4D4;">: </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14);function u(m,v){const a=o("router-link");return p(),e("div",null,[i,d,s("nav",y,[s("ul",null,[s("li",null,[c(a,{to:"#_2-1-使用-docker-安装"},{default:D(()=>[n("2.1 使用 Docker 安装")]),_:1})])])]),C])}const E=l(t,[["render",u],["__file","index.html.vue"]]);export{E as default};
