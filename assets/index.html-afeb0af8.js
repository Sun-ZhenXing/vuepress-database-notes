import{_ as c,r as p,o as r,c as i,b as s,a as n,w as D,d as a,f as l}from"./app-f357348a.js";const t={},d=s("p",null,"本文是 MySQL 的高阶教程，讲解关于 MySQL 高阶和底层的知识。本文的章节没有特别的联系，可以参考阅读。",-1),y=l(`<h1 id="_1-mysql-实例" tabindex="-1"><a class="header-anchor" href="#_1-mysql-实例" aria-hidden="true">#</a> 1. MySQL 实例</h1><h1 id="_2-mysql-函数" tabindex="-1"><a class="header-anchor" href="#_2-mysql-函数" aria-hidden="true">#</a> 2. MySQL 函数</h1><h2 id="_2-1-mysql-字符串函数" tabindex="-1"><a class="header-anchor" href="#_2-1-mysql-字符串函数" aria-hidden="true">#</a> 2.1 MySQL 字符串函数</h2><h2 id="_2-2-mysql-时间日期函数" tabindex="-1"><a class="header-anchor" href="#_2-2-mysql-时间日期函数" aria-hidden="true">#</a> 2.2 MySQL 时间日期函数</h2><h2 id="_2-3-mysql-聚合函数" tabindex="-1"><a class="header-anchor" href="#_2-3-mysql-聚合函数" aria-hidden="true">#</a> 2.3 MySQL 聚合函数</h2><h2 id="_2-4-mysql-控制流功能" tabindex="-1"><a class="header-anchor" href="#_2-4-mysql-控制流功能" aria-hidden="true">#</a> 2.4 MySQL 控制流功能</h2><h2 id="_2-5-mysql-常见数学函数" tabindex="-1"><a class="header-anchor" href="#_2-5-mysql-常见数学函数" aria-hidden="true">#</a> 2.5 MySQL 常见数学函数</h2><h2 id="_2-6-mysql-窗口函数" tabindex="-1"><a class="header-anchor" href="#_2-6-mysql-窗口函数" aria-hidden="true">#</a> 2.6 MySQL 窗口函数</h2><div class="hint-container warning"><p class="hint-container-title">支持性警告</p><p>MySQL 8.0 新增功能，请确保你的 MySQL 或其他 SQL 环境支持窗口函数。</p></div><h3 id="_2-6-1-窗口函数简介" tabindex="-1"><a class="header-anchor" href="#_2-6-1-窗口函数简介" aria-hidden="true">#</a> 2.6.1 窗口函数简介</h3><p>从版本 8.0 开始，MySQL 支持窗口函数。窗口函数允许您以新的，更简单的方式解决查询问题，并具有更好的性能。</p><p>假设我们有一个 <code>sales</code> 表，按员工和财政年度存储销售额，如下所示：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">CREATE</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">TABLE</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">sales</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">    sales_employee </span><span style="color:#569CD6;">VARCHAR</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">50</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">NOT NULL</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    fiscal_year </span><span style="color:#569CD6;">INT</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">NOT NULL</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    sale </span><span style="color:#569CD6;">DECIMAL</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">14</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">NOT NULL</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">PRIMARY KEY</span><span style="color:#D4D4D4;">(sales_employee, fiscal_year)</span></span>
<span class="line"><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">INSERT INTO</span><span style="color:#D4D4D4;"> sales (sales_employee, fiscal_year, sale)</span></span>
<span class="line"><span style="color:#569CD6;">VALUES</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Bob&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2016</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;Bob&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2017</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">150</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;Bob&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2018</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;Alice&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2016</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">150</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;Alice&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2017</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">100</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;Alice&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2018</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;John&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2016</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">200</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;John&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2017</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">150</span><span style="color:#D4D4D4;">),</span></span>
<span class="line"><span style="color:#D4D4D4;">      (</span><span style="color:#CE9178;">&#39;John&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2018</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">250</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们查看表的内容：</p><div class="language-sql" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">SELECT</span><span style="color:#D4D4D4;"> * </span><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> sales;</span></span>
<span class="line"></span></code></pre></div><p>查询结果为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">+----------------+-------------+--------+</span></span>
<span class="line"><span style="color:#D4D4D4;">| sales_employee | fiscal_year | sale   |</span></span>
<span class="line"><span style="color:#D4D4D4;">+----------------+-------------+--------+</span></span>
<span class="line"><span style="color:#D4D4D4;">| Alice          |        2016 | 150.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| Alice          |        2017 | 100.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| Alice          |        2018 | 200.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| Bob            |        2016 | 100.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| Bob            |        2017 | 150.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| Bob            |        2018 | 200.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| John           |        2016 | 200.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| John           |        2017 | 150.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">| John           |        2018 | 250.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">+----------------+-------------+--------+</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>理解窗口函数可能更容易从聚合函数开始：</p><p>聚合函数 <code>SUM()</code> 可以汇集多行的结果到单行中：</p><div class="language-sql" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">SELECT</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">SUM</span><span style="color:#D4D4D4;">(sale) </span><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> sales;</span></span>
<span class="line"></span></code></pre></div><p>而 <code>GROUP BY</code> 可以将聚合函数用于行的子集：</p><div class="language-sql" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">SELECT</span><span style="color:#D4D4D4;"> fiscal_year, </span><span style="color:#DCDCAA;">SUM</span><span style="color:#D4D4D4;">(sale) </span><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> sales</span></span>
<span class="line"><span style="color:#569CD6;">GROUP BY</span><span style="color:#D4D4D4;"> fiscal_year;</span></span>
<span class="line"></span></code></pre></div><p>与带有 <code>GROUP BY</code> 子句的聚合函数一样，窗口函数也对行的子集进行操作，但它们不会减少查询返回的行数。</p><p>例如，以下查询返回每个员工的销售额，以及按会计年度计算的员工总销售额：</p><div class="language-sql" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">SELECT</span></span>
<span class="line"><span style="color:#D4D4D4;">    fiscal_year,</span></span>
<span class="line"><span style="color:#D4D4D4;">    sales_employee,</span></span>
<span class="line"><span style="color:#D4D4D4;">    sale,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">SUM</span><span style="color:#D4D4D4;">(sale) </span><span style="color:#569CD6;">OVER</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">PARTITION</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">BY</span><span style="color:#D4D4D4;"> fiscal_year) total_sales</span></span>
<span class="line"><span style="color:#569CD6;">FROM</span></span>
<span class="line"><span style="color:#D4D4D4;">    sales;</span></span>
<span class="line"></span></code></pre></div><p>查询结果为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">+-------------+----------------+--------+-------------+</span></span>
<span class="line"><span style="color:#D4D4D4;">| fiscal_year | sales_employee | sale   | total_sales |</span></span>
<span class="line"><span style="color:#D4D4D4;">+-------------+----------------+--------+-------------+</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2016 | Alice          | 150.00 |      450.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2016 | Bob            | 100.00 |      450.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2016 | John           | 200.00 |      450.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2017 | Alice          | 100.00 |      400.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2017 | Bob            | 150.00 |      400.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2017 | John           | 150.00 |      400.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2018 | Alice          | 200.00 |      650.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2018 | Bob            | 200.00 |      650.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">|        2018 | John           | 250.00 |      650.00 |</span></span>
<span class="line"><span style="color:#D4D4D4;">+-------------+----------------+--------+-------------+</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，<code>SUM()</code> 函数用作窗口函数，函数对由 <code>OVER</code> 子句内容定义的一组行进行操作。<code>SUM()</code> 应用函数的一组行称为窗口。</p><p>调用窗口函数的一般语法如下：</p><div class="language-sql" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">window_function_name(expression) </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">OVER</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">        [partition_defintion]</span></span>
<span class="line"><span style="color:#D4D4D4;">        [order_definition]</span></span>
<span class="line"><span style="color:#D4D4D4;">        [frame_definition]</span></span>
<span class="line"><span style="color:#D4D4D4;">    ) </span></span>
<span class="line"></span></code></pre></div><h3 id="_2-6-2-排序和排名" tabindex="-1"><a class="header-anchor" href="#_2-6-2-排序和排名" aria-hidden="true">#</a> 2.6.2 排序和排名</h3><p><code>DENSE_RANK()</code> 是一个窗口函数，它为分区或结果集中的每一行分配排名，而排名值没有间隙。</p><p>也就是说，对于相同的分数排名结果相同，而排名是连续的。</p><p><code>DENSE_RANK()</code> 函数的语法如下：</p><div class="language-sql" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">DENSE_RANK</span><span style="color:#D4D4D4;">() </span><span style="color:#569CD6;">OVER</span><span style="color:#D4D4D4;"> (</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">PARTITION</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">BY</span><span style="color:#D4D4D4;"> &lt;expression&gt;[{,&lt;expression&gt;...}]</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">ORDER BY</span><span style="color:#D4D4D4;"> &lt;expression&gt; [ASC|DESC], [{,&lt;expression&gt;...}]</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div>`,35),h={class:"hint-container tip"},u=s("p",{class:"hint-container-title"},"提示",-1),v={href:"https://leetcode.cn/problems/rank-scores/",target:"_blank",rel:"noopener noreferrer"},m=l(`<p>此题可使用窗口函数 <code>DENSE_RANK()</code>，参考代码：</p><div class="language-sql" data-ext="sql"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">select</span><span style="color:#D4D4D4;"> score, </span><span style="color:#DCDCAA;">dense_rank</span><span style="color:#D4D4D4;">() </span><span style="color:#569CD6;">over</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">order by</span><span style="color:#D4D4D4;"> score </span><span style="color:#569CD6;">desc</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">as</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;rank&#39;</span></span>
<span class="line"><span style="color:#569CD6;">from</span><span style="color:#D4D4D4;"> Scores;</span></span>
<span class="line"></span></code></pre></div>`,2),b=l('<h2 id="_2-7-mysql-其他函数" tabindex="-1"><a class="header-anchor" href="#_2-7-mysql-其他函数" aria-hidden="true">#</a> 2.7 MySQL 其他函数</h2><h1 id="_3-mysql-管理" tabindex="-1"><a class="header-anchor" href="#_3-mysql-管理" aria-hidden="true">#</a> 3. MySQL 管理</h1><h1 id="_4-mysql-视图和触发器" tabindex="-1"><a class="header-anchor" href="#_4-mysql-视图和触发器" aria-hidden="true">#</a> 4. MySQL 视图和触发器</h1><h1 id="_5-mysql-索引" tabindex="-1"><a class="header-anchor" href="#_5-mysql-索引" aria-hidden="true">#</a> 5. MySQL 索引</h1><h2 id="_5-1-索引简介" tabindex="-1"><a class="header-anchor" href="#_5-1-索引简介" aria-hidden="true">#</a> 5.1 索引简介</h2><h2 id="_5-2-索引分类" tabindex="-1"><a class="header-anchor" href="#_5-2-索引分类" aria-hidden="true">#</a> 5.2 索引分类</h2><h2 id="_5-3-全文索引" tabindex="-1"><a class="header-anchor" href="#_5-3-全文索引" aria-hidden="true">#</a> 5.3 全文索引</h2><h1 id="_6-mysql-储存过程" tabindex="-1"><a class="header-anchor" href="#_6-mysql-储存过程" aria-hidden="true">#</a> 6. MySQL 储存过程</h1><h1 id="_7-mysql-8-0-新特征" tabindex="-1"><a class="header-anchor" href="#_7-mysql-8-0-新特征" aria-hidden="true">#</a> 7. MySQL 8.0 新特征</h1><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h1>',10),_={href:"https://www.begtut.com/mysql/mysql-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function E(C,x){const o=p("RouterLink"),e=p("ExternalLinkIcon");return r(),i("div",null,[d,s("ol",null,[s("li",null,[n(o,{to:"/mysql/advanced/uuid.html"},{default:D(()=>[a("UUID 相关函数")]),_:1})])]),y,s("div",h,[u,s("p",null,[s("a",v,[a("LeetCode：178. 分数排名"),n(e)])]),m]),b,s("p",null,[a("[1] MySQL 教程，begtut，"),s("a",_,[a("https://www.begtut.com/mysql/mysql-tutorial.html"),n(e)])])])}const q=c(t,[["render",E],["__file","index.html.vue"]]);export{q as default};
