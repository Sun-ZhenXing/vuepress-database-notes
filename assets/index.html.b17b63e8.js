import{_ as p,r as o,o as c,c as l,e as i,a as n,b as s,d as t,f as a}from"./app.6986580b.js";const u={},r=n("p",null,"本文是 MySQL 的高阶教程，讲解关于 MySQL 高阶和底层的知识。本文的章节没有特别的联系，可以参考阅读。",-1),d=a(`<h1 id="_1-mysql-实例" tabindex="-1"><a class="header-anchor" href="#_1-mysql-实例" aria-hidden="true">#</a> 1. MySQL 实例</h1><h1 id="_2-mysql-函数" tabindex="-1"><a class="header-anchor" href="#_2-mysql-函数" aria-hidden="true">#</a> 2. MySQL 函数</h1><h2 id="_2-1-mysql-字符串函数" tabindex="-1"><a class="header-anchor" href="#_2-1-mysql-字符串函数" aria-hidden="true">#</a> 2.1 MySQL 字符串函数</h2><h2 id="_2-2-mysql-时间日期函数" tabindex="-1"><a class="header-anchor" href="#_2-2-mysql-时间日期函数" aria-hidden="true">#</a> 2.2 MySQL 时间日期函数</h2><h2 id="_2-3-mysql-聚合函数" tabindex="-1"><a class="header-anchor" href="#_2-3-mysql-聚合函数" aria-hidden="true">#</a> 2.3 MySQL 聚合函数</h2><h2 id="_2-4-mysql-控制流功能" tabindex="-1"><a class="header-anchor" href="#_2-4-mysql-控制流功能" aria-hidden="true">#</a> 2.4 MySQL 控制流功能</h2><h2 id="_2-5-mysql-常见数学函数" tabindex="-1"><a class="header-anchor" href="#_2-5-mysql-常见数学函数" aria-hidden="true">#</a> 2.5 MySQL 常见数学函数</h2><h2 id="_2-6-mysql-窗口函数" tabindex="-1"><a class="header-anchor" href="#_2-6-mysql-窗口函数" aria-hidden="true">#</a> 2.6 MySQL 窗口函数</h2><div class="custom-container warning"><p class="custom-container-title">注意</p><p><strong>支持性警告</strong></p><p>MySQL 8.0 新增功能，请确保你的 MySQL 或其他 SQL 环境支持窗口函数。</p></div><h3 id="_2-6-1-窗口函数简介" tabindex="-1"><a class="header-anchor" href="#_2-6-1-窗口函数简介" aria-hidden="true">#</a> 2.6.1 窗口函数简介</h3><p>从版本 8.0 开始，MySQL 支持窗口函数。窗口函数允许您以新的，更简单的方式解决查询问题，并具有更好的性能。</p><p>假设我们有一个 <code>sales</code> 表，按员工和财政年度存储销售额，如下所示：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> sales <span class="token punctuation">(</span>
    sales_employee <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    fiscal_year <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    sale <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>sales_employee<span class="token punctuation">,</span> fiscal_year<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> sales <span class="token punctuation">(</span>sales_employee<span class="token punctuation">,</span> fiscal_year<span class="token punctuation">,</span> sale<span class="token punctuation">)</span>
<span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;Bob&#39;</span><span class="token punctuation">,</span> <span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;Alice&#39;</span><span class="token punctuation">,</span> <span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token string">&#39;John&#39;</span><span class="token punctuation">,</span> <span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们查看表的内容：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> sales<span class="token punctuation">;</span>
</code></pre></div><p>查询结果为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+----------------+-------------+--------+
| sales_employee | fiscal_year | sale   |
+----------------+-------------+--------+
| Alice          |        2016 | 150.00 |
| Alice          |        2017 | 100.00 |
| Alice          |        2018 | 200.00 |
| Bob            |        2016 | 100.00 |
| Bob            |        2017 | 150.00 |
| Bob            |        2018 | 200.00 |
| John           |        2016 | 200.00 |
| John           |        2017 | 150.00 |
| John           |        2018 | 250.00 |
+----------------+-------------+--------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>理解窗口函数可能更容易从聚合函数开始：</p><p>聚合函数 <code>SUM()</code> 可以汇集多行的结果到单行中：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>sale<span class="token punctuation">)</span> <span class="token keyword">FROM</span> sales<span class="token punctuation">;</span>
</code></pre></div><p>而 <code>GROUP BY</code> 可以将聚合函数用于行的子集：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> fiscal_year<span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>sale<span class="token punctuation">)</span> <span class="token keyword">FROM</span> sales
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> fiscal_year<span class="token punctuation">;</span>
</code></pre></div><p>与带有 <code>GROUP BY</code> 子句的聚合函数一样，窗口函数也对行的子集进行操作，但它们不会减少查询返回的行数。</p><p>例如，以下查询返回每个员工的销售额，以及按会计年度计算的员工总销售额：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
    fiscal_year<span class="token punctuation">,</span>
    sales_employee<span class="token punctuation">,</span>
    sale<span class="token punctuation">,</span>
    <span class="token function">SUM</span><span class="token punctuation">(</span>sale<span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span><span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> fiscal_year<span class="token punctuation">)</span> total_sales
<span class="token keyword">FROM</span>
    sales<span class="token punctuation">;</span>
</code></pre></div><p>查询结果为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+-------------+----------------+--------+-------------+
| fiscal_year | sales_employee | sale   | total_sales |
+-------------+----------------+--------+-------------+
|        2016 | Alice          | 150.00 |      450.00 |
|        2016 | Bob            | 100.00 |      450.00 |
|        2016 | John           | 200.00 |      450.00 |
|        2017 | Alice          | 100.00 |      400.00 |
|        2017 | Bob            | 150.00 |      400.00 |
|        2017 | John           | 150.00 |      400.00 |
|        2018 | Alice          | 200.00 |      650.00 |
|        2018 | Bob            | 200.00 |      650.00 |
|        2018 | John           | 250.00 |      650.00 |
+-------------+----------------+--------+-------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在此示例中，<code>SUM()</code> 函数用作窗口函数，函数对由 <code>OVER</code> 子句内容定义的一组行进行操作。<code>SUM()</code> 应用函数的一组行称为窗口。</p><p>调用窗口函数的一般语法如下：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>window_function_name<span class="token punctuation">(</span>expression<span class="token punctuation">)</span> 
    <span class="token keyword">OVER</span> <span class="token punctuation">(</span>
        <span class="token punctuation">[</span>partition_defintion<span class="token punctuation">]</span>
        <span class="token punctuation">[</span>order_definition<span class="token punctuation">]</span>
        <span class="token punctuation">[</span>frame_definition<span class="token punctuation">]</span>
    <span class="token punctuation">)</span> 
</code></pre></div><h3 id="_2-6-2-排序和排名" tabindex="-1"><a class="header-anchor" href="#_2-6-2-排序和排名" aria-hidden="true">#</a> 2.6.2 排序和排名</h3><p><code>DENSE_RANK()</code> 是一个窗口函数，它为分区或结果集中的每一行分配排名，而排名值没有间隙。</p><p>也就是说，对于相同的分数排名结果相同，而排名是连续的。</p><p><code>DENSE_RANK()</code> 函数的语法如下：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>DENSE_RANK<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">OVER</span> <span class="token punctuation">(</span>
    <span class="token keyword">PARTITION</span> <span class="token keyword">BY</span> <span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span><span class="token punctuation">[</span>{<span class="token punctuation">,</span><span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>}<span class="token punctuation">]</span>
    <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>{<span class="token punctuation">,</span><span class="token operator">&lt;</span>expression<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>}<span class="token punctuation">]</span>
<span class="token punctuation">)</span>
</code></pre></div>`,35),k={class:"custom-container tip"},h=n("p",{class:"custom-container-title"},"提示",-1),m={href:"https://leetcode.cn/problems/rank-scores/",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>此题可使用窗口函数 <code>DENSE_RANK()</code>，参考代码：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> score<span class="token punctuation">,</span> dense_rank<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">over</span><span class="token punctuation">(</span><span class="token keyword">order</span> <span class="token keyword">by</span> score <span class="token keyword">desc</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token string">&#39;rank&#39;</span>
<span class="token keyword">from</span> Scores<span class="token punctuation">;</span>
</code></pre></div>`,2),b=a('<h2 id="_2-7-mysql-其他函数" tabindex="-1"><a class="header-anchor" href="#_2-7-mysql-其他函数" aria-hidden="true">#</a> 2.7 MySQL 其他函数</h2><h1 id="_3-mysql-管理" tabindex="-1"><a class="header-anchor" href="#_3-mysql-管理" aria-hidden="true">#</a> 3. MySQL 管理</h1><h1 id="_4-mysql-视图和触发器" tabindex="-1"><a class="header-anchor" href="#_4-mysql-视图和触发器" aria-hidden="true">#</a> 4. MySQL 视图和触发器</h1><h1 id="_5-mysql-索引" tabindex="-1"><a class="header-anchor" href="#_5-mysql-索引" aria-hidden="true">#</a> 5. MySQL 索引</h1><h2 id="_5-1-索引简介" tabindex="-1"><a class="header-anchor" href="#_5-1-索引简介" aria-hidden="true">#</a> 5.1 索引简介</h2><h2 id="_5-2-索引分类" tabindex="-1"><a class="header-anchor" href="#_5-2-索引分类" aria-hidden="true">#</a> 5.2 索引分类</h2><h2 id="_5-3-全文索引" tabindex="-1"><a class="header-anchor" href="#_5-3-全文索引" aria-hidden="true">#</a> 5.3 全文索引</h2><h1 id="_6-mysql-储存过程" tabindex="-1"><a class="header-anchor" href="#_6-mysql-储存过程" aria-hidden="true">#</a> 6. MySQL 储存过程</h1><h1 id="_7-mysql-8-0-新特征" tabindex="-1"><a class="header-anchor" href="#_7-mysql-8-0-新特征" aria-hidden="true">#</a> 7. MySQL 8.0 新特征</h1><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h1>',10),y={href:"https://www.begtut.com/mysql/mysql-tutorial.html",target:"_blank",rel:"noopener noreferrer"};function _(g,q){const e=o("ExternalLinkIcon");return c(),l("div",null,[r,i(" more "),d,n("div",k,[h,n("p",null,[n("a",m,[s("LeetCode：178. 分数排名"),t(e)])]),v]),b,n("p",null,[s("[1] MySQL 教程，begtut，"),n("a",y,[s("https://www.begtut.com/mysql/mysql-tutorial.html"),t(e)])])])}const x=p(u,[["render",_],["__file","index.html.vue"]]);export{x as default};
