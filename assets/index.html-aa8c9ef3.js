import{_ as e,M as o,p as c,q as l,R as n,t as s,N as t,a1 as p}from"./framework-d3922052.js";const u={},i={href:"https://www.bilibili.com/video/BV1NJ411J79W",target:"_blank",rel:"noopener noreferrer"},k=n("em",null,"狂神说 Java：MySQL 最新教程通俗易懂",-1),d={class:"hint-container tip"},r=n("p",{class:"hint-container-title"},"提示",-1),m={href:"http://mp.weixin.qq.com/mp/homepage?__biz=Mzg2NTAzMTExNg==&hid=4&sn=044c8767bd3c1825a329c2b98fff2ffe",target:"_blank",rel:"noopener noreferrer"},v=p('<h1 id="_1-mysql-基本操作" tabindex="-1"><a class="header-anchor" href="#_1-mysql-基本操作" aria-hidden="true">#</a> 1. MySQL 基本操作</h1><p>在 Windows 上启动和关闭 MySQL 服务（需要管理员）：</p><div class="language-bat" data-ext="bat"><pre class="language-bat"><code>net stop mysql\nnet start mysql\n</code></pre></div><p>登录 <code>root</code> 用户：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>\n</code></pre></div><p>查询 MySQL 版本：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>刷新权限：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>\n</code></pre></div><p>修改密码：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> mysql<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>user<span class="token punctuation">`</span></span> <span class="token keyword">SET</span>\n    authentication_string<span class="token operator">=</span>PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">WHERE</span>\n    <span class="token keyword">user</span> <span class="token operator">=</span> <span class="token string">&#39;root&#39;</span> <span class="token operator">AND</span> host <span class="token operator">=</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><p>查看数据库：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span>\n</code></pre></div><p>使用数据库：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> world<span class="token punctuation">;</span>\n</code></pre></div><p>查看数据库中的表的信息：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span>\n</code></pre></div><p>显示表的详细信息：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DESCRIBE</span> city<span class="token punctuation">;</span>\n</code></pre></div><p>结束 MySQL 连接：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">exit</span>\n</code></pre></div><p>MySQL 关键字不分大小写。</p><p>注释：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 单行注释</span>\n<span class="token comment">/*\n    这是多行注释\n*/</span>\n<span class="token comment"># MyQL 也支持使用 &#39;#&#39; 注释</span>\n</code></pre></div><p>创建数据表常规配置：</p><ul><li>引擎：<code>InnoDB</code></li><li>字符集：<code>utf8</code></li><li>排序：<code>utf8_general_ci</code></li></ul><h1 id="_2-操作数据库的语句" tabindex="-1"><a class="header-anchor" href="#_2-操作数据库的语句" aria-hidden="true">#</a> 2. 操作数据库的语句</h1><h2 id="_2-1-操作数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-操作数据库" aria-hidden="true">#</a> 2.1 操作数据库</h2><p>MySQL 的数据库语言分为四大类：</p><ul><li>DDL：数据定义语言</li><li>DML：数据操作语言</li><li>DQL：数据查询语言</li><li>DCL：数据控制语言</li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意：下面的讲解中出现的 <code>[ ... ]</code> 表示可选内容，而 <code>{ ... }</code> 表示必选内容。</p></div><p>创建一个数据库，如果不存在的话：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>mydata<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n</code></pre></div><p>删除数据库：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">DATABASE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>mydata<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n</code></pre></div><p>使用数据库：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> <span class="token identifier"><span class="token punctuation">`</span>mydata<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n</code></pre></div><p>查看数据库：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">DATABASES</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="_2-2-数据库的列类型" tabindex="-1"><a class="header-anchor" href="#_2-2-数据库的列类型" aria-hidden="true">#</a> 2.2 数据库的列类型</h2><p>下面举例常见的类型：</p><table><thead><tr><th>数值类型</th><th>大小（字节）</th></tr></thead><tbody><tr><td><code>tinyint</code></td><td>1</td></tr><tr><td><code>smallint</code></td><td>2</td></tr><tr><td><code>mediumint</code></td><td>3</td></tr><tr><td><code>int</code></td><td>4</td></tr><tr><td><code>bigint</code></td><td>8</td></tr><tr><td><code>float</code></td><td>4</td></tr><tr><td><code>double</code></td><td>8</td></tr><tr><td><code>decimal</code></td><td>字符串形式</td></tr></tbody></table><table><thead><tr><th>字符类型</th><th>说明</th></tr></thead><tbody><tr><td><code>char</code></td><td>定长字符串，范围 0-255</td></tr><tr><td><code>varchar</code></td><td>变长字符串，范围 0-65535</td></tr><tr><td><code>tinytext</code></td><td>小文本，范围到 2^8-1</td></tr><tr><td><code>text</code></td><td>文本串，范围到 2^16-1</td></tr></tbody></table><table><thead><tr><th>日期</th><th>说明</th></tr></thead><tbody><tr><td><code>date</code></td><td>日期，格式为 <code>YYYY-MM-DD</code></td></tr><tr><td><code>time</code></td><td>时间，格式为 <code>HH:mm:ss</code></td></tr><tr><td><code>datetime</code></td><td>时间日期，格式为 <code>YYYY-MM-DD HH:mm:ss</code></td></tr><tr><td><code>timestamp</code></td><td>时间戳</td></tr><tr><td><code>year</code></td><td>年</td></tr></tbody></table><p><code>NULL</code> 类型为空值，如果需要比较请使用 <code>IS NULL</code> 而不是 <code>= NULL</code>，<code>NULL</code> 参与的运算结果也为 <code>NULL</code>。</p><h2 id="_2-3-数据库的字段属性" tabindex="-1"><a class="header-anchor" href="#_2-3-数据库的字段属性" aria-hidden="true">#</a> 2.3 数据库的字段属性</h2><table><thead><tr><th>字段属性</th><th>含义</th></tr></thead><tbody><tr><td><code>UNSIGNED</code></td><td>无符号的</td></tr><tr><td><code>ZEROFILL</code></td><td>零填充位数</td></tr><tr><td><code>AUTO_INCREMENT</code></td><td>自增的</td></tr><tr><td><code>NOT NULL</code></td><td>是否可空</td></tr><tr><td><code>DEFAULT</code></td><td>默认值</td></tr><tr><td><code>COMMENT</code></td><td>注释，可选</td></tr></tbody></table><p>PS：一个业务型数据库必须存在的一些字段。</p><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td><code>id</code></td><td>一般是主键</td></tr><tr><td><code>version</code></td><td>乐观锁</td></tr><tr><td><code>is_delete</code></td><td>伪删除</td></tr><tr><td><code>gmt_create</code></td><td>创建时间</td></tr><tr><td><code>gmt_update</code></td><td>修改时间</td></tr></tbody></table><h2 id="_2-4-创建数据库表" tabindex="-1"><a class="header-anchor" href="#_2-4-创建数据库表" aria-hidden="true">#</a> 2.4 创建数据库表</h2><p>建表语法：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token punctuation">[</span><span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span><span class="token punctuation">]</span> <span class="token identifier"><span class="token punctuation">`</span>表名<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>字段名<span class="token punctuation">`</span></span> 列类型 <span class="token punctuation">[</span>属性<span class="token punctuation">]</span> <span class="token punctuation">[</span>索引<span class="token punctuation">]</span> <span class="token punctuation">[</span>注释<span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>\n<span class="token punctuation">)</span> <span class="token punctuation">[</span>引擎<span class="token punctuation">]</span> <span class="token punctuation">[</span>字符集<span class="token punctuation">]</span> <span class="token punctuation">[</span>注释<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre></div><p>下面是实例：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;学号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;匿名&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>pwd<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;123456&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;女&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;性别&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>birthday<span class="token punctuation">`</span></span> <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;出生日期&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>address<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;家庭住址&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;邮箱&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>规则：</p><ol><li>表的名称和字段名尽量使用反引号括起来</li><li>字符串尽量只使用单引号</li><li>每一行加上一个逗号（<code>,</code>），最后一行可以不加</li><li>一个表只有唯一的主键，可以写在语句最后</li><li>数据库不使用驼峰命名，一般是小写字母和下划线分割，首字母可以大写</li></ol><p>如果需要查看表的具体结构，可以使用：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查看表的结构</span>\n<span class="token keyword">DESC</span> student<span class="token punctuation">;</span>\n<span class="token comment">-- 或者使用</span>\n<span class="token keyword">DESCRIBE</span> student<span class="token punctuation">;</span>\n\n<span class="token comment">-- 查看创建数据库的语句</span>\n<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> school<span class="token punctuation">;</span>\n<span class="token comment">-- 查看建表语句</span>\n<span class="token keyword">SHOW</span> <span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">;</span>\n</code></pre></div><p>如果字符集有问题，可以设置默认字符集，在 <code>my.ini</code> 文件中修改：</p><div class="language-ini" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">character-set-server</span><span class="token punctuation">=</span><span class="token value attr-value">utf8</span>\n</code></pre></div><h2 id="_2-5-数据库引擎" tabindex="-1"><a class="header-anchor" href="#_2-5-数据库引擎" aria-hidden="true">#</a> 2.5 数据库引擎</h2><p>常用的有：</p><ul><li>InnoDB</li><li>MyISAM</li></ul><table><thead><tr><th>特点</th><th>MyISAM</th><th>InnoDB</th></tr></thead><tbody><tr><td>事务支持</td><td>不支持</td><td>支持</td></tr><tr><td>数据行锁定</td><td>不支持</td><td>支持</td></tr><tr><td>外键约束</td><td>不支持</td><td>支持</td></tr><tr><td>全文索引</td><td>支持</td><td>不支持</td></tr><tr><td>表空间大小</td><td>较小</td><td>约为 InnoDB 的两倍</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">提示</p><p>最新版的 MyISAM 也支持事务。</p></div><p>比较特点：</p><ul><li>InnoDB：安全性高，事务处理，多表多用户操作</li><li>MyISAM：节约空间，速度较快</li></ul><p>MySQL 的数据库信息储存在 <code>data</code> 目录下，本质还是文件存储。</p><p>数据库引擎在物理文件上的区别：</p><ul><li>InnoDB：表结构文件 <code>*.frm</code> 和上一级的 <code>ibdata*</code> 文件</li><li>MyISAM：表结构文件 <code>*.frm</code> 和数据文件 <code>*.MYD</code>、<code>*.MYI</code> 索引文件</li></ul><h2 id="_2-6-修改和删除数据表" tabindex="-1"><a class="header-anchor" href="#_2-6-修改和删除数据表" aria-hidden="true">#</a> 2.6 修改和删除数据表</h2><p>修改表的名称：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">RENAME</span> student1<span class="token punctuation">;</span>\n</code></pre></div><p>增加表的字段：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">ADD</span> age <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>修改表的字段约束：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">MODIFY</span> age <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>修改表的字段名：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student CHANGE age age1 <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><blockquote><p><code>MODIFY</code> 和 <code>CHANGE</code> 的区别：</p><ul><li><code>MODIFY</code> 不能来重命名，只能修改字段类型和约束</li><li><code>CHANGE</code> 可以用来重命名字段，但是不能修改字段类型和约束</li></ul></blockquote><p>删除表的字段：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student <span class="token keyword">DROP</span> age1<span class="token punctuation">;</span>\n</code></pre></div><p>删除表，如果表存在的话：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> student<span class="token punctuation">;</span>\n</code></pre></div><blockquote><p>创建的删除操作尽量加上 <code>IF EXISTS</code> 防止报错。</p></blockquote><h1 id="_3-mysql-的数据管理" tabindex="-1"><a class="header-anchor" href="#_3-mysql-的数据管理" aria-hidden="true">#</a> 3. MySQL 的数据管理</h1><h2 id="_3-1-外键" tabindex="-1"><a class="header-anchor" href="#_3-1-外键" aria-hidden="true">#</a> 3.1 外键</h2><blockquote><p>删除有外键的表，必须要先删除引用的表。</p></blockquote><p>我们可以让我们的学生表加入年级 <code>gradeid</code> 字段，然后年级字段引用年级表的 <code>gradeid</code> 字段，我们的年级表定义如下：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年级ID&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gradename<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年级名称&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre></div><p>下面我们给学生表增加约束，简单起见，我们重新建表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token operator">NOT</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;学号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;匿名&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;姓名&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>pwd<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;123456&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;女&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;性别&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>birthday<span class="token punctuation">`</span></span> <span class="token keyword">DATETIME</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;出生日期&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年级ID&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>address<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;家庭住址&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;邮箱&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>FK_gradeid<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">CONSTRAINT</span> <span class="token identifier"><span class="token punctuation">`</span>FK_gradeid<span class="token punctuation">`</span></span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这是一种方式，给表手动加上约束。</p><p>或者通过修改的方式给表增加外键：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span>\n    <span class="token keyword">ADD</span> <span class="token keyword">CONSTRAINT</span> <span class="token identifier"><span class="token punctuation">`</span>FK_gradeid<span class="token punctuation">`</span></span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n    <span class="token keyword">REFERENCES</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>以上的外键都是数据库级别的外键，不建议使用。（避免数据库过多造成困扰）最佳实践是将数据库视为单纯的表，只用来储存数据，而外键使用程序实现。</p></div><h2 id="_3-2-dml-语言" tabindex="-1"><a class="header-anchor" href="#_3-2-dml-语言" aria-hidden="true">#</a> 3.2 DML 语言</h2><p>数据库的意义：数据存储，数据管理。</p><p>DML 语言：数据操作语言。分别对应下面几个方法：</p><ul><li><code>INSERT</code></li><li><code>UPDATE</code></li><li><code>DELETE</code></li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradename<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;大四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>如果不写表的字段，那么将会一一匹配：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;大一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>插入多个值：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradename<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n    <span class="token punctuation">(</span><span class="token string">&#39;大二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token string">&#39;大三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>更新值：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token keyword">SET</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token string">&#39;鸭梨&#39;</span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre></div><p>可以修改多个属性：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token keyword">SET</span>\n    <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token string">&#39;鸭梨&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token string">&#39;alex@alexsun.top&#39;</span>\n    <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre></div><table><thead><tr><th>操作符</th><th>含义</th></tr></thead><tbody><tr><td><code>=</code></td><td>等于</td></tr><tr><td><code>&lt;&gt;</code> 或 <code>!=</code></td><td>等于</td></tr><tr><td><code>BETWEEN ... AND ...</code></td><td>在范围内</td></tr><tr><td><code>&gt;</code>、<code>&lt;</code>、<code>&gt;=</code>、<code>&lt;=</code></td><td>大于小于……</td></tr><tr><td><code>AND</code></td><td>且</td></tr><tr><td><code>OR</code></td><td>或</td></tr><tr><td><code>NOT</code></td><td>否定</td></tr></tbody></table><p>删除数据：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre></div><p>清空一张表，但保留结构：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span>\n</code></pre></div><p>区别：</p><ul><li><code>TRUNCATE</code> 会将计数器清零</li><li><code>TRUNCATE</code> 不会影响事务的执行</li></ul><p><code>DELETE</code> 问题，当重启数据库时：</p><ul><li>对于 InnoDB，自增会从 1 开始，因为这个值存在内存中</li><li>对于 MyISAM，自增不变，这个值存在于磁盘中</li></ul><h1 id="_4-dql-查询数据" tabindex="-1"><a class="header-anchor" href="#_4-dql-查询数据" aria-hidden="true">#</a> 4. DQL 查询数据</h1><p>DQL（Data Query Language），即数据查询语言：</p><ul><li>数据库最核心的语言</li><li>所以的查询都使用 <code>SELECT</code> 来查询</li><li>简单和复杂的查询都能写</li><li>是使用频率最高的语句</li></ul><p>下面是本节使用的数据和表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>school<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">use</span> <span class="token identifier"><span class="token punctuation">`</span>school<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建学生表</span>\n<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>studentno<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;学号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>loginpwd<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>studentname<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;学生姓名&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;性别，0或1&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;年级编号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>phone<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;联系电话，允许为空&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>address<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;地址，允许为空&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>borndate<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;出生时间&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span> <span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;邮箱账号允许为空&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>identitycard<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;身份证号&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>studentno<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">unique</span> <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>identitycard<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>identitycard<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span>myisam <span class="token keyword">default</span> <span class="token keyword">charset</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建年级表</span>\n<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">&#39;年级编号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gradename<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;年级名称&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">engine</span><span class="token operator">=</span><span class="token keyword">innodb</span> <span class="token keyword">auto_increment</span> <span class="token operator">=</span> <span class="token number">6</span> <span class="token keyword">default</span> <span class="token keyword">charset</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建科目表</span>\n<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>subject<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">`</span>subject<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>subjectno<span class="token punctuation">`</span></span><span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">auto_increment</span> <span class="token keyword">comment</span> <span class="token string">&#39;课程编号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>subjectname<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;课程名称&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>classhour<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;学时&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;年级编号&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>subjectno<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">engine</span> <span class="token operator">=</span> <span class="token keyword">innodb</span> <span class="token keyword">auto_increment</span> <span class="token operator">=</span> <span class="token number">19</span> <span class="token keyword">default</span> <span class="token keyword">charset</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span>\n\n<span class="token comment">-- 创建成绩表</span>\n<span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> <span class="token identifier"><span class="token punctuation">`</span>result<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n<span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token identifier"><span class="token punctuation">`</span>result<span class="token punctuation">`</span></span><span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>studentno<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;学号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>subjectno<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;课程编号&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>examdate<span class="token punctuation">`</span></span> <span class="token keyword">datetime</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;考试日期&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>studentresult<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">comment</span> <span class="token string">&#39;考试成绩&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">key</span> <span class="token identifier"><span class="token punctuation">`</span>subjectno<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>subjectno<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">engine</span> <span class="token operator">=</span> <span class="token keyword">innodb</span> <span class="token keyword">default</span> <span class="token keyword">charset</span> <span class="token operator">=</span> utf8<span class="token punctuation">;</span>\n\n<span class="token comment">-- 插入学生数据</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>studentno<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>loginpwd<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>studentname<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>sex<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>phone<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>address<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>borndate<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>identitycard<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span>\n    <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;张伟&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;13800001234&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;北京朝阳&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1980-1-1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text123@qq.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456198001011234&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;赵强&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;13800002222&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;广东深圳&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1990-1-1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;text111@qq.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456199001011233&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 插入成绩数据</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>result<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>studentno<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>subjectno<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>examdate<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>studentresult<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span>\n    <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-11-11 16:00:00&#39;</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-11-12 16:00:00&#39;</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-11-11 09:00:00&#39;</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-11-13 16:00:00&#39;</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;2013-11-14 16:00:00&#39;</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 插入年级数据</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>grade<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>gradename<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span>\n    <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;大一&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;大二&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;大三&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;大四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;预科班&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 插入科目数据</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>subject<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>subjectno<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>subjectname<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>classhour<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>gradeid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span>\n    <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;高等数学-1&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;高等数学-2&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;高等数学-3&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;高等数学-4&#39;</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;C语言-1&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;C语言-2&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;C语言-3&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token string">&#39;C语言-4&#39;</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&#39;Java程序设计-1&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&#39;Java程序设计-2&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&#39;Java程序设计-3&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;Java程序设计-4&#39;</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token string">&#39;数据库结构-1&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token string">&#39;数据库结构-2&#39;</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token string">&#39;数据库结构-3&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token string">&#39;数据库结构-4&#39;</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token string">&#39;C#基础&#39;</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的数据仅为示例，可以根据实际情况生成或者 Mock。</p><h2 id="_4-1-基本查询" tabindex="-1"><a class="header-anchor" href="#_4-1-基本查询" aria-hidden="true">#</a> 4.1 基本查询</h2><p>查询所有字段：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>\n</code></pre></div><p>查询指定字段，并使用别名（别名可以加引号，也可以不加）：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno <span class="token keyword">as</span> <span class="token string">&#39;学号&#39;</span><span class="token punctuation">,</span> studentname <span class="token keyword">as</span> <span class="token string">&#39;学生姓名&#39;</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>\n</code></pre></div><p>查询被连接的字符串：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;姓名：&#39;</span><span class="token punctuation">,</span> studentname<span class="token punctuation">)</span> <span class="token keyword">AS</span> 新名字 <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>\n</code></pre></div><table><thead><tr><th>新名字</th></tr></thead><tbody><tr><td>姓名：张伟</td></tr><tr><td>姓名：赵强</td></tr></tbody></table><h2 id="_4-2-去重" tabindex="-1"><a class="header-anchor" href="#_4-2-去重" aria-hidden="true">#</a> 4.2 去重</h2><p>对结果去重：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> studentno <span class="token keyword">FROM</span> result<span class="token punctuation">;</span>\n</code></pre></div><p>SQL 也可以直接查询表达式：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token number">100</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token keyword">AS</span> RES\n</code></pre></div><table><thead><tr><th>RES</th></tr></thead><tbody><tr><td>300</td></tr></tbody></table><p>查询自增的步长：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> @<span class="token variable">@auto_increment_increment</span><span class="token punctuation">;</span>\n</code></pre></div><p><code>SELECT</code> 可以选择的表达式包括：</p><ul><li>文本</li><li>列</li><li><code>NULL</code></li><li>函数</li><li>计算表达式</li><li>系统遍历</li></ul><h2 id="_4-3-where-条件子句" tabindex="-1"><a class="header-anchor" href="#_4-3-where-条件子句" aria-hidden="true">#</a> 4.3 Where 条件子句</h2><p>查询成绩在 95~100 分的人：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> result <span class="token keyword">WHERE</span> studentresult <span class="token operator">BETWEEN</span> <span class="token number">95</span> <span class="token operator">AND</span> <span class="token number">100</span><span class="token punctuation">;</span>\n</code></pre></div><p>查询不是 1000 号学生的成绩：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> result <span class="token keyword">WHERE</span> <span class="token operator">NOT</span> studentno <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="_4-4-模糊查询" tabindex="-1"><a class="header-anchor" href="#_4-4-模糊查询" aria-hidden="true">#</a> 4.4 模糊查询</h2><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td><code>IS NULL</code></td><td>为空</td></tr><tr><td><code>IS NOT NULL</code></td><td>非空</td></tr><tr><td><code>LIKE</code></td><td>匹配</td></tr><tr><td><code>IN</code></td><td>在集合内</td></tr></tbody></table><p>模糊查询中的 <code>%</code> 相当于任意字符，相当于通配符 <code>*</code>，<code>_</code> 匹配一个字符，相当于通配符 <code>?</code>。</p><p>查询张姓同学：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno<span class="token punctuation">,</span> studentname <span class="token keyword">FROM</span> student\n    <span class="token keyword">WHERE</span> studentname <span class="token operator">LIKE</span> <span class="token string">&#39;张%&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><p>查询学号在指定范围内的学生：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno<span class="token punctuation">,</span> studentname <span class="token keyword">FROM</span> student\n    <span class="token keyword">WHERE</span> studentno <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1023</span><span class="token punctuation">,</span> <span class="token number">1345</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="_4-5-联表查询" tabindex="-1"><a class="header-anchor" href="#_4-5-联表查询" aria-hidden="true">#</a> 4.5 联表查询</h2><p>查询参见了考试的同学（学号，姓名，科目，分数）</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span> studentname<span class="token punctuation">,</span> subjectno<span class="token punctuation">,</span> studentresult\n    <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> s \n    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> result <span class="token keyword">AS</span> r\n    <span class="token keyword">ON</span> s<span class="token punctuation">.</span>studentno <span class="token operator">=</span> r<span class="token punctuation">.</span>studentno<span class="token punctuation">;</span>\n</code></pre></div><table><thead><tr><th>操作</th><th>描述</th></tr></thead><tbody><tr><td><code>inner join</code></td><td>如果有一个匹配就返回行</td></tr><tr><td><code>left join</code></td><td>从左表返回所有的值，即使右表没有匹配</td></tr><tr><td><code>right join</code></td><td>从右表返回所有的值，即使左表没有匹配</td></tr></tbody></table><p>查询缺考的同学：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span> studentname<span class="token punctuation">,</span> subjectno<span class="token punctuation">,</span> studentresult\n    <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> s\n    <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> result <span class="token keyword">AS</span> r\n    <span class="token keyword">ON</span> s<span class="token punctuation">.</span>studentno <span class="token operator">=</span> r<span class="token punctuation">.</span>studentno\n    <span class="token keyword">WHERE</span> studentresult <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>\n</code></pre></div><p>查询参加考试的同学的信息（学号，学生姓名，科目，分数）：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span> studentname<span class="token punctuation">,</span> subjectname<span class="token punctuation">,</span> studentresult\n    <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> s\n    <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> result <span class="token keyword">AS</span> r\n    <span class="token keyword">ON</span> r<span class="token punctuation">.</span>studentno <span class="token operator">=</span> s<span class="token punctuation">.</span>studentno\n    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">`</span>subject<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> sub\n    <span class="token keyword">ON</span> r<span class="token punctuation">.</span>subjectno <span class="token operator">=</span> sub<span class="token punctuation">.</span>subjectno\n</code></pre></div><p>分析思路：</p><ol><li>分析需求，分析查询的字段来自哪些表 <ul><li>从哪些表查询数据</li><li>如果存在多张表的查询，先从两张表的查询开始</li></ul></li><li>确定使用哪种连接查询 <ul><li>判断交叉点（是 7 种中的哪一种）</li><li>判断条件</li></ul></li></ol><p>查询学生所属的年级：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno<span class="token punctuation">,</span> studentname<span class="token punctuation">,</span> gradename\n    <span class="token keyword">FROM</span> student\n    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> grade\n    <span class="token keyword">ON</span> student<span class="token punctuation">.</span>gradeid <span class="token operator">=</span> grade<span class="token punctuation">.</span>gradeid<span class="token punctuation">;</span>\n</code></pre></div><p>查询科目所属的年级：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> subjectno<span class="token punctuation">,</span> subjectname<span class="token punctuation">,</span> gradename\n    <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">`</span>subject<span class="token punctuation">`</span></span>\n    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> grade\n    <span class="token keyword">ON</span> grade<span class="token punctuation">.</span>gradeid <span class="token operator">=</span> <span class="token identifier"><span class="token punctuation">`</span>subject<span class="token punctuation">`</span></span><span class="token punctuation">.</span>gradeid<span class="token punctuation">;</span>\n</code></pre></div><p>查询参加了 “高等数学-4” 考试的同学信息（学号，学生姓名，科目名，分数）：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span> studentname<span class="token punctuation">,</span> subjectname<span class="token punctuation">,</span> studentresult\n    <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> s\n    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">`</span>result<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> r\n    <span class="token keyword">ON</span> s<span class="token punctuation">.</span>studentno <span class="token operator">=</span> r<span class="token punctuation">.</span>studentno\n    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">`</span>subject<span class="token punctuation">`</span></span> <span class="token keyword">AS</span> sub\n    <span class="token keyword">ON</span> r<span class="token punctuation">.</span>subjectno <span class="token operator">=</span> sub<span class="token punctuation">.</span>subjectno\n    <span class="token keyword">WHERE</span> subjectname <span class="token operator">=</span> <span class="token string">&#39;数据库结构-1&#39;</span><span class="token punctuation">;</span>\n</code></pre></div><h2 id="_4-6-自连接" tabindex="-1"><a class="header-anchor" href="#_4-6-自连接" aria-hidden="true">#</a> 4.6 自连接</h2><p>自连接即自己的表的自己的表连接，逻辑上将一张表拆为两张一样的表。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> category <span class="token punctuation">(</span>\n    <span class="token identifier"><span class="token punctuation">`</span>categoryid<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">UNSIGNED</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主题ID&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>pid<span class="token punctuation">`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;父ID&#39;</span><span class="token punctuation">,</span>\n    <span class="token identifier"><span class="token punctuation">`</span>categoryName<span class="token punctuation">`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主题名字&#39;</span><span class="token punctuation">,</span>\n    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>categoryid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">9</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>category<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>categoryid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>pid<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>categoryName<span class="token punctuation">`</span></span><span class="token punctuation">)</span> \n<span class="token keyword">VALUES</span>  <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;信息技术&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;软件开发&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;数据库&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;美术设计&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;web开发&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;ps技术&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;办公信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们将上面的表分割为上面的两张表：</p><table><thead><tr><th><code>categoryid</code></th><th><code>categoryName</code></th></tr></thead><tbody><tr><td>2</td><td>信息技术</td></tr><tr><td>3</td><td>软件开发</td></tr><tr><td>5</td><td>美术设计</td></tr></tbody></table><table><thead><tr><th><code>pid</code></th><th><code>categoryid</code></th><th><code>categoryName</code></th></tr></thead><tbody><tr><td>3</td><td>4</td><td>数据库</td></tr><tr><td>2</td><td>8</td><td>办公信息</td></tr><tr><td>3</td><td>6</td><td>web开发</td></tr><tr><td>5</td><td>7</td><td>美术设计</td></tr></tbody></table><p>查询预期：</p><table><thead><tr><th>父栏目</th><th>子栏目</th></tr></thead><tbody><tr><td>软件开发</td><td>数据库</td></tr><tr><td>软件开发</td><td>web开发</td></tr><tr><td>美术设计</td><td>ps技术</td></tr><tr><td>信息技术</td><td>办公信息</td></tr></tbody></table><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> a<span class="token punctuation">.</span>categoryName <span class="token keyword">AS</span> <span class="token string">&#39;父栏目&#39;</span><span class="token punctuation">,</span> b<span class="token punctuation">.</span>categoryName <span class="token keyword">AS</span> <span class="token string">&#39;子栏目&#39;</span>\n    <span class="token keyword">FROM</span> category <span class="token keyword">AS</span> a<span class="token punctuation">,</span> category <span class="token keyword">AS</span> b\n    <span class="token keyword">WHERE</span> a<span class="token punctuation">.</span>categoryid <span class="token operator">=</span> b<span class="token punctuation">.</span>pid<span class="token punctuation">;</span>\n</code></pre></div>',179),b={class:"hint-container tip"},y=n("p",{class:"hint-container-title"},"提示",-1),w={href:"https://leetcode.cn/problems/employees-earning-more-than-their-managers/",target:"_blank",rel:"noopener noreferrer"},g=p(`<p>此题可以使用自连接实现，参考代码：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> E1<span class="token punctuation">.</span>name <span class="token keyword">as</span> Employee <span class="token keyword">from</span> Employee <span class="token keyword">as</span> E1
<span class="token keyword">left</span> <span class="token keyword">join</span> Employee <span class="token keyword">as</span> E2
<span class="token keyword">on</span> E1<span class="token punctuation">.</span>managerId <span class="token operator">=</span> E2<span class="token punctuation">.</span>id
<span class="token keyword">where</span> E1<span class="token punctuation">.</span>salary <span class="token operator">&gt;</span> E2<span class="token punctuation">.</span>salary<span class="token punctuation">;</span>
</code></pre></div>`,2),E=p(`<h2 id="_4-7-分页和排序" tabindex="-1"><a class="header-anchor" href="#_4-7-分页和排序" aria-hidden="true">#</a> 4.7 分页和排序</h2><p>SQL <code>SELECT</code> 完整语法如下，其中各个子句的位置不能调换：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token punctuation">[</span><span class="token keyword">all</span><span class="token operator">|</span><span class="token keyword">distinct</span><span class="token punctuation">]</span>
{<span class="token operator">*</span><span class="token operator">|</span><span class="token keyword">table</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">|</span><span class="token punctuation">[</span><span class="token keyword">table</span><span class="token punctuation">.</span><span class="token punctuation">]</span>field<span class="token punctuation">[</span><span class="token keyword">as</span> alias<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>}
<span class="token keyword">from</span> <span class="token keyword">table</span><span class="token punctuation">[</span><span class="token keyword">as</span> table_alias<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">[</span><span class="token keyword">left</span><span class="token operator">|</span><span class="token keyword">right</span><span class="token operator">|</span><span class="token keyword">inner</span> <span class="token keyword">join</span> table2<span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">where</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">having</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
    <span class="token punctuation">[</span><span class="token keyword">limit</span> <span class="token punctuation">]</span>
</code></pre></div><p>排序：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno<span class="token punctuation">,</span> studentresult
    <span class="token keyword">FROM</span> result
    <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> studentresult <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre></div><p>升序使用 <code>ASC</code>，降序使用 <code>DESC</code>，可以支持多个键进行排序。</p><p>查询 “高等数学-1” 课程成绩排名前十的学生，并且分数大于 80 分的学生信息（学号，姓名，课程名称，分数）：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span> s<span class="token punctuation">.</span>studentname<span class="token punctuation">,</span> sub<span class="token punctuation">.</span>subjectname<span class="token punctuation">,</span> r<span class="token punctuation">.</span>studentresult
    <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> s
    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> result <span class="token keyword">AS</span> r
    <span class="token keyword">ON</span> r<span class="token punctuation">.</span>studentno <span class="token operator">=</span> s<span class="token punctuation">.</span>studentno
    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">\`</span>subject<span class="token punctuation">\`</span></span> <span class="token keyword">AS</span> sub
    <span class="token keyword">ON</span> sub<span class="token punctuation">.</span>subjectno <span class="token operator">=</span> r<span class="token punctuation">.</span>subjectno
    <span class="token keyword">WHERE</span> sub<span class="token punctuation">.</span>subjectname <span class="token operator">=</span> <span class="token string">&#39;高等数学-1&#39;</span>
    <span class="token keyword">LIMIT</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="_4-8-子查询" tabindex="-1"><a class="header-anchor" href="#_4-8-子查询" aria-hidden="true">#</a> 4.8 子查询</h2><p>查询 “高等数学-4” 的所有考试结果（学科，科目编号，成绩），降序排列。</p><p>【方式一】使用连接查询</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno<span class="token punctuation">,</span> r<span class="token punctuation">.</span>subjectno<span class="token punctuation">,</span> studentresult
    <span class="token keyword">FROM</span> result <span class="token keyword">AS</span> r
    <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">\`</span>subject<span class="token punctuation">\`</span></span> <span class="token keyword">AS</span> sub
    <span class="token keyword">ON</span> r<span class="token punctuation">.</span>subjectno <span class="token operator">=</span> sub<span class="token punctuation">.</span>subjectno
    <span class="token keyword">WHERE</span> subjectname <span class="token operator">=</span> <span class="token string">&#39;高等数学-4&#39;</span>
    <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> studentresult <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre></div><p>【方式二】使用子查询</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno<span class="token punctuation">,</span> subjectno<span class="token punctuation">,</span> studentresult
<span class="token keyword">FROM</span> result
<span class="token keyword">WHERE</span> subjectno <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> subjectno <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>subject<span class="token punctuation">\`</span></span>
    <span class="token keyword">WHERE</span> subjectname <span class="token operator">=</span> <span class="token string">&#39;高等数学-4&#39;</span>
<span class="token punctuation">)</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> studentresult <span class="token keyword">DESC</span><span class="token punctuation">;</span>
</code></pre></div><p>查询课程为 “高等数学-2” 且分数不小于 80 分的学生的学号和姓名：</p><p>【方法一】使用连接查询</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> s<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span>studentname
<span class="token keyword">FROM</span> student s
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> result r
<span class="token keyword">ON</span> s<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>StudentNo<span class="token punctuation">\`</span></span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>StudentNo<span class="token punctuation">\`</span></span>
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">\`</span>subject<span class="token punctuation">\`</span></span> sub
<span class="token keyword">ON</span> sub<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>SubjectNo<span class="token punctuation">\`</span></span> <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>SubjectNo<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> subjectname <span class="token operator">=</span> <span class="token string">&#39;高等数学-2&#39;</span> <span class="token operator">AND</span> StudentResult <span class="token operator">&gt;=</span> <span class="token number">80</span><span class="token punctuation">;</span>
</code></pre></div><p>【方法二】使用连接查询 + 子查询</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> r<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span>studentname <span class="token keyword">FROM</span> student s
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> result r <span class="token keyword">ON</span> s<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>StudentNo<span class="token punctuation">\`</span></span><span class="token operator">=</span>r<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>StudentNo<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> StudentResult<span class="token operator">&gt;=</span><span class="token number">80</span><span class="token punctuation">;</span>

<span class="token comment">-- 在上面 SQL 基础上，添加需求：课程为 高等数学-2</span>
<span class="token keyword">SELECT</span> r<span class="token punctuation">.</span>studentno<span class="token punctuation">,</span>studentname <span class="token keyword">FROM</span> student s
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> result r <span class="token keyword">ON</span> s<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>StudentNo<span class="token punctuation">\`</span></span><span class="token operator">=</span>r<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>StudentNo<span class="token punctuation">\`</span></span>
<span class="token keyword">WHERE</span> StudentResult <span class="token operator">&gt;=</span><span class="token number">80</span> <span class="token operator">AND</span> subjectno<span class="token operator">=</span><span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> subjectno <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>subject<span class="token punctuation">\`</span></span>
    <span class="token keyword">WHERE</span> subjectname <span class="token operator">=</span> <span class="token string">&#39;高等数学-2&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【方法三】使用子查询</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> studentno<span class="token punctuation">,</span>studentname <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> studentno <span class="token operator">IN</span> <span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> studentno <span class="token keyword">FROM</span> result <span class="token keyword">WHERE</span> StudentResult <span class="token operator">&gt;=</span><span class="token number">80</span> <span class="token operator">AND</span> subjectno <span class="token operator">=</span> <span class="token punctuation">(</span>
        <span class="token keyword">SELECT</span> subjectno <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>subject<span class="token punctuation">\`</span></span> <span class="token keyword">WHERE</span> subjectname <span class="token operator">=</span> <span class="token string">&#39;高等数学-2&#39;</span>
    <span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre></div>`,21),h={class:"hint-container tip"},f=n("p",{class:"hint-container-title"},"提示",-1),T={href:"https://leetcode.cn/problems/second-highest-salary/",target:"_blank",rel:"noopener noreferrer"},q=p(`<p>此题可以使用子查询，参考代码：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">as</span> SecondHighestSalary <span class="token keyword">from</span> Employee
<span class="token keyword">where</span> salary <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> Employee<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,2),N=n("h1",{id:"_5-mysql-常用函数",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-mysql-常用函数","aria-hidden":"true"},"#"),s(" 5. MySQL 常用函数")],-1),S={class:"hint-container tip"},A=n("p",{class:"hint-container-title"},"提示",-1),R={href:"https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html",target:"_blank",rel:"noopener noreferrer"},L=p(`<h2 id="_5-1-常用函数" tabindex="-1"><a class="header-anchor" href="#_5-1-常用函数" aria-hidden="true">#</a> 5.1 常用函数</h2><p>几乎各种语言常用的数学运算都存在：</p><ul><li><code>ABS(X)</code></li><li><code>RAND()</code></li><li><code>SIN(X)</code></li><li><code>CEIL(X)</code></li></ul><p>还有字符串函数：</p><ul><li><code>CHAR_LENGTH(&#39;123&#39;)</code> 获得字符串的长度</li><li><code>CONCAT(s1, s2)</code> 拼接字符串</li><li><code>INSERT(str, pos, len, newstr)</code> 插入字符串</li><li><code>UPPER(&#39;1231wqwerqwe&#39;)</code> 转换为大写</li><li><code>REPLACE(&#39;123456&#39;,&#39;34&#39;,&#39;abc&#39;)</code> 替换字符串</li></ul><p>时间日期的函数：</p><ul><li><code>CURRENT_DATE()</code> 当前日期</li><li><code>CURDATE()</code> 和上面的函数一样</li><li><code>LOCALTIME()</code> 本地时间日期</li><li><code>NOW()</code> 当前时间日期</li><li><code>SYSDATE()</code> 系统时间</li></ul><p>查询当前的日期信息：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">YEAR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token keyword">MONTH</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token keyword">DAY</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token keyword">HOUR</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token keyword">MINUTE</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token keyword">SECOND</span><span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>MySQL 支持签名算法：</p><ul><li><code>MD5(str)</code></li><li><code>SHA(str)</code></li></ul><p>系统函数：</p><ul><li><code>USER()</code> 当前用户</li><li><code>SYSTEM_USER()</code> 用户名，和上面结果一致</li><li><code>VERSION()</code> MySQL 版本</li></ul><h2 id="_5-2-聚合函数" tabindex="-1"><a class="header-anchor" href="#_5-2-聚合函数" aria-hidden="true">#</a> 5.2 聚合函数</h2><table><thead><tr><th>函数名</th><th>描述</th></tr></thead><tbody><tr><td><code>COUNT()</code></td><td>计数</td></tr><tr><td><code>SUM()</code></td><td>求和</td></tr><tr><td><code>AVG()</code></td><td>平均数</td></tr><tr><td><code>MIN()</code></td><td>最小值</td></tr><tr><td><code>MAX()</code></td><td>最大值</td></tr></tbody></table><p>查询一共有多少学生：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 指定列，会忽略 null</span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>studentno<span class="token punctuation">)</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
<span class="token comment">-- 每一条记录</span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
<span class="token comment">-- </span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
</code></pre></div><p>查询平均分大于 80 分的课程的平均分、最高分、最低分：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> subjectname<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>studentresult<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span>studentresult<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>studentresult<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> result <span class="token keyword">AS</span> r
<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> <span class="token identifier"><span class="token punctuation">\`</span>subject<span class="token punctuation">\`</span></span> sub
<span class="token keyword">ON</span> r<span class="token punctuation">.</span>subjectno <span class="token operator">=</span> sub<span class="token punctuation">.</span>subjectno
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> r<span class="token punctuation">.</span>subjectno
<span class="token keyword">HAVING</span> <span class="token function">AVG</span><span class="token punctuation">(</span>studentresult<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">;</span>
</code></pre></div><p><code>HAVING</code> 用于过滤分组信息。</p><h1 id="_6-事务" tabindex="-1"><a class="header-anchor" href="#_6-事务" aria-hidden="true">#</a> 6. 事务</h1><p>事务：批量的操作，要么都成功，要么都失败。</p><p>事务原则：ACID 原则</p><ul><li>原子性</li><li>一致性</li><li>隔离性</li><li>持久性</li></ul><p>隔离性的问题：</p><ul><li>脏读：一个事务提交了，但另一个没有提交</li><li>不可重复读：同一个事务内，重复读取表中的数据，表数据发生了改变</li><li>虚读（幻读）：在一个事务中读到了别人插入的数据，导致前后结果不一致</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 关闭自动提交</span>
<span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token comment">-- 开始事务</span>
<span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> result <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 可以记录保存点</span>
<span class="token keyword">SAVEPOINT</span> 保存点<span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> result <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 提交事务</span>
<span class="token keyword">COMMIT</span><span class="token punctuation">;</span>
<span class="token comment">-- 开启自动提交</span>
<span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>回滚到指定保存点语法：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ROLLBACK</span> <span class="token keyword">TO</span> <span class="token keyword">SAVEPOINT</span> 保存点名称<span class="token punctuation">;</span>
</code></pre></div><p>删除一个保存点：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">RELEASE</span> <span class="token keyword">SAVEPOINT</span> 保存点名<span class="token punctuation">;</span>
</code></pre></div><p>下面创建一个数据库模拟转账问题：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> shop <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>account<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">auto_increment</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>money<span class="token punctuation">\`</span></span> <span class="token keyword">DECIMAL</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> account <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>money<span class="token punctuation">\`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span>
    <span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token number">2000.00</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span> <span class="token number">10000.00</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面模拟转账事务：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span>

<span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> money<span class="token operator">=</span>money<span class="token operator">-</span><span class="token number">500</span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">UPDATE</span> account <span class="token keyword">SET</span> money<span class="token operator">=</span>money<span class="token operator">+</span><span class="token number">500</span> <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">COMMIT</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> autocommit <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="_7-索引" tabindex="-1"><a class="header-anchor" href="#_7-索引" aria-hidden="true">#</a> 7. 索引</h1><blockquote><p>索引是帮助 MySQL 高效获取数据的数据结构。</p></blockquote><h2 id="_7-1-索引的分类" tabindex="-1"><a class="header-anchor" href="#_7-1-索引的分类" aria-hidden="true">#</a> 7.1 索引的分类</h2><p>下面列举一些常见的索引：</p><ul><li>主键索引（Primary Key） <ul><li>唯一标识</li><li>主键只有一个</li></ul></li><li>唯一索引（Unique Key） <ul><li>避免重复的列出现</li><li>可以有多个列加入唯一索引</li></ul></li><li>常规索引（Key / Index） <ul><li>默认的</li></ul></li><li>全文索引（FullText） <ul><li>在特定的数据库引擎下才有</li></ul></li></ul><h2 id="_7-2-索引的使用" tabindex="-1"><a class="header-anchor" href="#_7-2-索引的使用" aria-hidden="true">#</a> 7.2 索引的使用</h2><p>索引使用步骤：</p><ol><li>创建表时给字段增加索引</li><li>创建完毕后增加索引</li></ol><p>显示所有的索引信息：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">INDEX</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
</code></pre></div><p>添加一个索引：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> student
<span class="token keyword">ADD</span> FULLTEXT <span class="token keyword">INDEX</span> <span class="token identifier"><span class="token punctuation">\`</span>studentname<span class="token punctuation">\`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>studentname<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>不使用全文索引，检查 SQL 语句：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span>
</code></pre></div><p>使用全文索引，检查 SQL 执行：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student
<span class="token keyword">WHERE</span> <span class="token keyword">MATCH</span><span class="token punctuation">(</span>studentname<span class="token punctuation">)</span> AGAINST<span class="token punctuation">(</span><span class="token string">&#39;张&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="_7-3-测试索引性能" tabindex="-1"><a class="header-anchor" href="#_7-3-测试索引性能" aria-hidden="true">#</a> 7.3 测试索引性能</h2><p>创建下面的表：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>app_user<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">BIGINT</span> <span class="token punctuation">(</span> <span class="token number">20</span> <span class="token punctuation">)</span> <span class="token keyword">UNSIGNED</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户昵称&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>email<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户邮箱&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>phone<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">20</span> <span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;手机号&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>gender<span class="token punctuation">\`</span></span> <span class="token keyword">TINYINT</span> <span class="token punctuation">(</span> <span class="token number">4</span> <span class="token punctuation">)</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;性别（0:男；1：女）&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span> <span class="token number">100</span> <span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;密码&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span> <span class="token keyword">TINYINT</span> <span class="token punctuation">(</span> <span class="token number">4</span> <span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;年龄&#39;</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>create_time<span class="token punctuation">\`</span></span> <span class="token keyword">datetime</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>update_time<span class="token punctuation">\`</span></span> <span class="token keyword">TIMESTAMP</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span><span class="token punctuation">,</span>
<span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span> <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token punctuation">)</span> 
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">INNODB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span> <span class="token operator">=</span> utf8mb4 <span class="token keyword">COMMENT</span> <span class="token operator">=</span> <span class="token string">&#39;app用户表&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后插入 1,000,000 条 数据：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 开启函数权限（重启后会失效）</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> log_bin_trust_function_creators <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">-- 创建 mock_data() 函数</span>
<span class="token keyword">DROP</span> <span class="token keyword">FUNCTION</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> mock_data<span class="token punctuation">;</span>
<span class="token keyword">DELIMITER</span> $$
<span class="token keyword">CREATE</span> <span class="token keyword">FUNCTION</span> mock_data <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">RETURNS</span> <span class="token keyword">INT</span>
<span class="token keyword">BEGIN</span>
    <span class="token keyword">DECLARE</span> num <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1000000</span><span class="token punctuation">;</span>
    <span class="token keyword">DECLARE</span> i <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">WHILE</span> i <span class="token operator">&lt;</span> num <span class="token keyword">DO</span>
        <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">\`</span>app_user<span class="token punctuation">\`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>email<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>phone<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>gender<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>age<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
        <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>CONCAT<span class="token punctuation">(</span><span class="token string">&#39;用户&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;24736743@qq.com&#39;</span><span class="token punctuation">,</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;18&#39;</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">999999999</span><span class="token operator">-</span><span class="token number">100000000</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token number">100000000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> UUID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span>RAND<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">SET</span> i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">END</span> <span class="token keyword">WHILE</span><span class="token punctuation">;</span>
    <span class="token keyword">RETURN</span> i<span class="token punctuation">;</span>
<span class="token keyword">END</span><span class="token punctuation">;</span>
<span class="token comment">-- 执行操作</span>
<span class="token keyword">SELECT</span> mock_data<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先我们查询这个数据：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> app_user <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;用户9999&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>执行用时达到了 1 秒。</p><p>我们解释上面的 SQL 执行：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> app_user <span class="token keyword">WHERE</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&#39;用户9999&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p>其 <code>row</code> 列数字达到了 992357，也就是说数据库查找了 992357 条数据才找到我们的数据。</p><p>添加索引：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> id_app_user <span class="token keyword">ON</span> app_user<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>再去执行刚才的索引，速度提升明显。</p><p>索引在小数据量的时候，用处不大，但是在大数据量时区别明显。</p><h2 id="_7-4-索引原则" tabindex="-1"><a class="header-anchor" href="#_7-4-索引原则" aria-hidden="true">#</a> 7.4 索引原则</h2><p>基本原则：</p><ul><li>索引不是越多越好</li><li>不要对经常变动的数据加索引</li><li>小数据量的表不需要加索引</li><li>索引一般作用在常用来查询的字段上</li></ul><p>不同索引类型的区别：</p><ul><li>Hash 索引：查询单条快，范围查询慢</li><li>BTree 索引：B+ 树，层数越多，数据量指数级增长</li></ul><p>InnoDB 默认的索引类型是 BTree。</p><p>不同的存储引擎支持的索引类型也不一样：</p><ul><li>InnoDB 支持事务，支持行级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引</li><li>MyISAM 不支持事务，支持表级别锁定，支持 B-tree、Full-text 等索引，不支持 Hash 索引</li><li>Memory 不支持事务，支持表级别锁定，支持 B-tree、Hash 等索引，不支持 Full-text 索引</li><li>NDB 支持事务，支持行级别锁定，支持 Hash 索引，不支持 B-tree、Full-text 等索引</li><li>Archive 不支持事务，支持表级别锁定，不支持 B-tree、Hash、Full-text 等索引</li></ul>`,74),O={class:"hint-container tip"},C=n("p",{class:"hint-container-title"},"提示",-1),x={href:"http://blog.codinglabs.org/articles/theory-of-mysql-index.html",target:"_blank",rel:"noopener noreferrer"},I=p(`<h1 id="_8-权限管理和数据库备份" tabindex="-1"><a class="header-anchor" href="#_8-权限管理和数据库备份" aria-hidden="true">#</a> 8. 权限管理和数据库备份</h1><h2 id="_8-1-用户管理" tabindex="-1"><a class="header-anchor" href="#_8-1-用户管理" aria-hidden="true">#</a> 8.1 用户管理</h2><p>推荐使用数据库管理软件进行可视化管理，因为用户管理很少需要被使用，而且需要严格的操作。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建用户并设定密码</span>
<span class="token keyword">CREATE</span> <span class="token keyword">USER</span> Alex IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 修改当前用户密码</span>
<span class="token keyword">SET</span> PASSWORD <span class="token operator">=</span> PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 修改指定用户的密码</span>
<span class="token keyword">SET</span> PASSWORD <span class="token keyword">FOR</span> Alex <span class="token operator">=</span> PASSWORD<span class="token punctuation">(</span><span class="token string">&#39;abcdefg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 重命名用户</span>
<span class="token keyword">RENAME</span> <span class="token keyword">USER</span> Alex <span class="token keyword">TO</span> Bob<span class="token punctuation">;</span>

<span class="token comment">-- 用户授权，授予全部权限给每个表，格式为 库.表</span>
<span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> Alex<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果我们给一个用户授权的内容是 <code>ALL PRIVILEGES</code>，那么这个用户拥有除了 <code>GRANT</code> 以外的全部权限，如果需要等同于 <code>root</code> 的权限，可以使用下面的 SQL：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> Alex <span class="token keyword">WITH</span> <span class="token keyword">GRANT</span> <span class="token keyword">OPTION</span><span class="token punctuation">;</span>
</code></pre></div><p>查询权限：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> GRANTS <span class="token keyword">FOR</span> admin<span class="token variable">@localhost</span><span class="token punctuation">;</span>
</code></pre></div><p>如果后面不加域，默认查询 <code>user@%</code> 用户。</p><p>撤销权限：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">REVOKE</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">FROM</span> Alex<span class="token punctuation">;</span>
</code></pre></div><p>删除用户：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">USER</span> Alex<span class="token punctuation">;</span>
</code></pre></div><h2 id="_8-2-数据库备份" tabindex="-1"><a class="header-anchor" href="#_8-2-数据库备份" aria-hidden="true">#</a> 8.2 数据库备份</h2><p>为什么要备份？</p><ul><li>保证重要的数据不丢失</li><li>数据转移</li></ul><p>MySQL 数据库备份 的方式：</p><ul><li>拷贝物理文件</li><li>可视化工具中导出</li><li>使用命令行</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>mysqldump <span class="token parameter variable">-hlocalhost</span> <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-pxxxx</span> school student <span class="token operator">&gt;</span> dump.sql
</code></pre></div><p>如果需要备份多张表，用空格分隔多张表。</p><p>导入数据，先登录，然后在命令控制台输入：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">USE</span> school<span class="token punctuation">;</span>
SOURCE <span class="token keyword">dump</span><span class="token punctuation">.</span><span class="token keyword">sql</span><span class="token punctuation">;</span>
</code></pre></div><p>或者使用命令行：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-pxxxx</span> school <span class="token operator">&lt;</span> dump.sql
</code></pre></div><h1 id="_9-规范数据库设计" tabindex="-1"><a class="header-anchor" href="#_9-规范数据库设计" aria-hidden="true">#</a> 9. 规范数据库设计</h1><h2 id="_9-1-为什么设计数据库" tabindex="-1"><a class="header-anchor" href="#_9-1-为什么设计数据库" aria-hidden="true">#</a> 9.1 为什么设计数据库</h2><p>当数据库比较复杂的时候，我们需要对数据库进行设计。</p><p>糟糕的数据库设计：</p><ul><li>数据冗余，浪费空间</li><li>数据插入、删除都会麻烦（不使用物理外键）</li><li>程序性能差</li></ul><p>良好的数据库设计：</p><ul><li>节省内存空间</li><li>保证数据的完整性</li><li>方便开发系统</li></ul><p>软件开发中，数据库设计</p><ul><li>分析需求：分析业务需求和需要处理的数据库的需求</li><li>概要设计：设计关系图、E-R 图</li></ul><p>设计数据库的步骤（个人博客）：</p><ul><li>收集信息，分析需求 <ul><li>用户表（用户登录，个人信息，写博客，创建分类）</li><li>分类表（文章分类，创建者）</li><li>文章表（文章的信息）</li><li>友链表（友链信息）</li><li>自定义表（系统信息，某个关键字，或者一些主字段）</li></ul></li><li>标识实体</li><li>标识实体之间的关系 <ul><li>多个实体之间的关系</li><li>没有关联的表</li></ul></li></ul><p>场景举例：粉丝查询</p><ul><li>查询粉丝的数量</li><li>查询粉丝的具体用户 ID</li></ul><p>建立中间表 <code>user_follow</code>：</p><table><thead><tr><th>字段</th><th>类型</th><th>注释</th></tr></thead><tbody><tr><td><code>id</code></td><td>int</td><td>主键</td></tr><tr><td><code>user_id</code></td><td>int</td><td>被关注者</td></tr><tr><td><code>follow_id</code></td><td>int</td><td>关注者</td></tr></tbody></table><p>PS：可以使用一些前端框架，整合数据库和后端：</p><ul><li>Ant Design Pro</li><li>ElementUI</li></ul><h2 id="_9-2-三大范式" tabindex="-1"><a class="header-anchor" href="#_9-2-三大范式" aria-hidden="true">#</a> 9.2 三大范式</h2><p>为什么需要数据规范化？</p><ul><li>信息重复</li><li>更新异常</li><li>插入异常 <ul><li>无法正常显示信息</li></ul></li><li>删除异常 <ul><li>丢失有效信息</li></ul></li></ul><p>三大范式：</p><ul><li>第一范式（1NF）：每一列都是原子项（字段不可再分）</li><li>第二范式（2NF）：在第一范式的基础上消除非主属性对主码的部分函数依赖（每张表只做一件事情）</li><li>第三范式（3NF）：在第二范式基础上消除传递依赖（数据表中的每一列数据都和主键直接相关）</li></ul><p>规范不是越高越好：</p><ul><li>成本和用户体验问题，性能往往更重要</li><li>阿里规范：关联查询不得超过三张表</li><li>故意给一些表增加冗余字段（可以避免多表查询）</li></ul><h1 id="_10-jdbc" tabindex="-1"><a class="header-anchor" href="#_10-jdbc" aria-hidden="true">#</a> 10. JDBC</h1><h2 id="_10-1-数据库驱动" tabindex="-1"><a class="header-anchor" href="#_10-1-数据库驱动" aria-hidden="true">#</a> 10.1 数据库驱动</h2><p>Sun 公司为了简化数据库的开发操作，提供了一个 Java 操作数据库的规范，称为 JDBC，这些规范由具体的数据局厂商去实现。</p><p>对于开发人员来说，我们只需要掌握 JDBC 接口操作即可。</p><p>除了需要 JDBC 的包，我们还需要 MySQL 数据库驱动包：<code>mysql-connector-java-5.1.47.jar</code>。</p><h2 id="_10-2-第一个-jdbc-程序" tabindex="-1"><a class="header-anchor" href="#_10-2-第一个-jdbc-程序" aria-hidden="true">#</a> 10.2 第一个 JDBC 程序</h2><p>我们首先创建一个数据库：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> JDBCStudy <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span> utf8 <span class="token keyword">COLLATE</span> utf8_general_ci<span class="token punctuation">;</span>

<span class="token keyword">USE</span> jdbcstudy<span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span>
    <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>email<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token identifier"><span class="token punctuation">\`</span>birthday<span class="token punctuation">\`</span></span> <span class="token keyword">DATE</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> users <span class="token keyword">VALUES</span>
    <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zs@sina.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1980-12-04&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;12345123126&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ls@sina.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1982-12-04&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;kkww&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1ed23456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;kw@sina.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;1999-12-04&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按照如下的步骤创建 JDBC 项目：</p><ol><li>创建一个 Java 项目</li><li>复制数据库驱动 <code>.jar</code> 包到 <code>@/lib/</code> 文件夹下，然后导入到库</li><li>编写代码测试</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 1. 加载驱动</span>
        <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.mysql.jdbc.Driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> user <span class="token operator">=</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;xxxxxx&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 2. 获取连接</span>
        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 3. 创建语句</span>
        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;select * from users&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 4. 执行 SQL 语句</span>
        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeQuery</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 5. 循环判断是否有下一行</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token string">&quot;birthday&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 6. 关闭资源</span>
        rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stmt<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>DriverManager</code> 原始的写法如下，但是使用反射可以直接注册，如果再写下面的语句相当于被注册了两次。</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">registerDriver</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span></span>Driver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>数据库的基本设置可以使用连接对象设置：</p><div class="language-java" data-ext="java"><pre class="language-java"><code>conn<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
conn<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>语句对象：</p><table><thead><tr><th>方法</th><th>功能</th></tr></thead><tbody><tr><td><code>stmt.execute()</code></td><td>执行任何 SQL</td></tr><tr><td><code>stmt.executeQuery()</code></td><td>执行查询操作</td></tr><tr><td><code>stmt.executeUpdate()</code></td><td>更新、插入或删除操作，返回受到影响的行数</td></tr><tr><td><code>stmt.executeBatch()</code></td><td>执行多个 SQL</td></tr></tbody></table><p>结果集对象：</p><table><thead><tr><th>方法</th></tr></thead><tbody><tr><td><code>rs.next()</code></td></tr><tr><td><code>rs.getObject()</code></td></tr><tr><td><code>rs.getInt()</code></td></tr><tr><td><code>rs.getFloat()</code></td></tr><tr><td><code>rs.getDate()</code></td></tr><tr><td><code>rs.getString()</code></td></tr></tbody></table><h2 id="_10-3-封装-jdbc-连接" tabindex="-1"><a class="header-anchor" href="#_10-3-封装-jdbc-连接" aria-hidden="true">#</a> 10.3 封装 JDBC 连接</h2><p>新建 <code>db.properties</code> 文件：</p><div class="language-properties" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">driver</span><span class="token punctuation">=</span><span class="token value attr-value">com.mysql.jdbc.Driver</span>
<span class="token key attr-name">url</span><span class="token punctuation">=</span><span class="token value attr-value">jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=true</span>
<span class="token key attr-name">username</span><span class="token punctuation">=</span><span class="token value attr-value">root</span>
<span class="token key attr-name">password</span><span class="token punctuation">=</span><span class="token value attr-value">xxxxx</span>
</code></pre></div><p>新建类 <code>JdbcUtils.java</code> 然后编写：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdbcUtils</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> driver <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> url <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;db.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Properties</span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            props<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>

            driver <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;driver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            url <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            username <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            password <span class="token operator">=</span> props<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>driver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> conn<span class="token punctuation">,</span> <span class="token class-name">Statement</span> st<span class="token punctuation">,</span> <span class="token class-name">ResultSet</span> rs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rs <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                rs<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>st <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                st<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>conn <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                conn<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新数据：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">Statement</span> stmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            conn <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            stmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">createStatement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;insert into users values (4, &#39;Alex&#39;, &#39;123&#39;, &#39;yali@alexsun.top&#39;, &#39;2002-06-05&#39;)&quot;</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> stmt<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;插入成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;插入失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> stmt<span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-4-解决-sql-注入问题" tabindex="-1"><a class="header-anchor" href="#_10-4-解决-sql-注入问题" aria-hidden="true">#</a> 10.4 解决 SQL 注入问题</h2><p><code>PreparedStatement</code> 可以防止 SQL 注入，并且拥有更高的效率。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            conn <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pstmt <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token string">&quot;insert into users values (?,?,?,?,?)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            st<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            st<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            st<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            st<span class="token punctuation">.</span><span class="token function">setString</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            st<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> st<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;插入成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;插入失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> pstmt<span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-5-jdbc-事务" tabindex="-1"><a class="header-anchor" href="#_10-5-jdbc-事务" aria-hidden="true">#</a> 10.5 JDBC 事务</h2><p>JDBC 实现事务：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Connection</span> conn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">PreparedStatement</span> pstmt <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">ResultSet</span> rs <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            conn <span class="token operator">=</span> <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            conn<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> sql1 <span class="token operator">=</span> <span class="token string">&quot;UPDATE account SET money=money-500 WHERE \`name\` = &#39;A&#39;&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> sql2 <span class="token operator">=</span> <span class="token string">&quot;UPDATE account SET money=money+500 WHERE \`name\` = &#39;B&#39;&quot;</span><span class="token punctuation">;</span>
            pstmt1 <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql1<span class="token punctuation">)</span><span class="token punctuation">;</span>
            pstmt2 <span class="token operator">=</span> conn<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span>sql2<span class="token punctuation">)</span><span class="token punctuation">;</span>
            pstmt1<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pstmt2<span class="token punctuation">.</span><span class="token function">executeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            conn<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                conn<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e1<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token class-name">JdbcUtils</span><span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> pstmt<span class="token punctuation">,</span> rs<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果不写 <code>conn.rollback();</code> 事务也会被回滚。</p><h2 id="_10-6-数据库连接池" tabindex="-1"><a class="header-anchor" href="#_10-6-数据库连接池" aria-hidden="true">#</a> 10.6 数据库连接池</h2><p>原始的数据库连接过程：</p><ol><li>建立数据库连接</li><li>执行完毕</li><li>释放</li></ol><p>连接 —— 释放过程十分浪费时间。池化技术是准备一些预先的资源，过来就连接预先准备好的。</p><p>几个常用值：</p><ul><li>常用连接数</li><li>最小连接数</li><li>最大连接数</li><li>超时时间</li></ul><p>如果超过了最大连接数就只能排队等待，如果一个连接超时就会抛出错误并结束连接。</p><p>如果需要编写连接池，需要实现 <code>DataSource</code> 接口。</p><p>常见的开源数据源实现：</p><ul><li>DBCP</li><li>C3P0</li><li>Druid</li></ul><p>使用了数据库连接池之后，我们就不需要编写连接数据库的代码。</p><h2 id="_10-7-dbcp-连接池" tabindex="-1"><a class="header-anchor" href="#_10-7-dbcp-连接池" aria-hidden="true">#</a> 10.7 DBCP 连接池</h2><p>需要下面的 <code>.jar</code> 包支持：</p><ul><li><code>commons-dbcp-1.4.jar</code></li><li><code>commons-pool-1.6.jar</code></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>dbcp<span class="token punctuation">.</span></span><span class="token class-name">BasicDataSourceFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JdbcUtilsDBCP</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">InputStream</span> in <span class="token operator">=</span> <span class="token class-name">JdbcUtilsDBCP</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;db_dbcp.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Properties</span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            props<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
            dataSource <span class="token operator">=</span> <span class="token class-name">BasicDataSourceFactory</span><span class="token punctuation">.</span><span class="token function">createDataSource</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> dataSource<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dataSource<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>C3P0 类似，可以参考文档进行实现。</p><p>后续可以学习：</p><ul><li>Druid</li><li>Apache 项目的其他软件</li></ul>`,99);function _(M,D){const a=o("ExternalLinkIcon");return c(),l("div",null,[n("p",null,[s("本文是 "),n("a",i,[k,t(a)]),s(" 的课程笔记。本文的 MySQL 学习是业务层面的 MySQL，运维级别的 MySQL 可以参考更多更深入的资料。")]),n("div",d,[r,n("p",null,[s("作者的文档可以在微信公众号查看，"),n("a",m,[s("作者的文档"),t(a)]),s(" 也可以参考。")])]),v,n("div",b,[y,n("p",null,[n("a",w,[s("LeetCode：181. 超过经理收入的员工"),t(a)])]),g]),E,n("div",h,[f,n("p",null,[n("a",T,[s("LeetCode：176. 第二高的薪水"),t(a)])]),q]),N,n("div",S,[A,n("p",null,[s("参考文档："),n("a",R,[s("https://dev.mysql.com/doc/refman/8.0/en/built-in-function-reference.html"),t(a)])])]),L,n("div",O,[C,n("p",null,[s("推荐阅读："),n("a",x,[s("MySQL 索引原理"),t(a)]),s("。")])]),I])}const j=e(u,[["render",_],["__file","index.html.vue"]]);export{j as default};
