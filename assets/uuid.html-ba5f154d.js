import{_ as e,M as t,p as r,q as c,R as s,N as p,V as o,t as a,a1 as l}from"./framework-8980b429.js";const k={},u=s("h1",{id:"uuid",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#uuid","aria-hidden":"true"},"#"),a(" UUID")],-1),d={class:"table-of-contents"},i=l(`<h2 id="_1-uuid-函数" tabindex="-1"><a class="header-anchor" href="#_1-uuid-函数" aria-hidden="true">#</a> 1. UUID 函数</h2><p><code>UUID()</code> 返回一个 UUID 字符串：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> UUID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>UUID_SHORT()</code> 返回一个 <code>short</code>（2 字节）整数 UUID：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> UUID_SHORT<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="_2-mysql-8-0-新特性" tabindex="-1"><a class="header-anchor" href="#_2-mysql-8-0-新特性" aria-hidden="true">#</a> 2. MySQL 8.0 新特性</h2><p>MySQL 8.0 支持新的函数：</p><ul><li><code>UUID_TO_BIN()</code></li><li><code>BIN_TO_UUID()</code></li><li><code>IS_UUID()</code></li></ul><p>将 UUID 转换为二进制数据：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> UUID_TO_BIN<span class="token punctuation">(</span>UUID<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>例如 <code>m_user</code> 表的主键是二进制的 UUID，查询二进制存储的 UUID：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> BIN_TO_UUID<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token keyword">AS</span> ID<span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>username<span class="token punctuation">\`</span></span> <span class="token keyword">FROM</span> <span class="token identifier"><span class="token punctuation">\`</span>m_user<span class="token punctuation">\`</span></span><span class="token punctuation">;</span>
</code></pre></div><p>检测字符串是否满足 UUID：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> IS_UUID<span class="token punctuation">(</span><span class="token string">&#39;{12345678-1234-5678-1234-567812345678}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> A<span class="token punctuation">,</span>
       IS_UUID<span class="token punctuation">(</span><span class="token string">&#39;12345678123456781234567812345678&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> B<span class="token punctuation">,</span>
       IS_UUID<span class="token punctuation">(</span><span class="token string">&#39;12345678-1234-5678-1234-567812345678&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> C<span class="token punctuation">;</span>
</code></pre></div><p>结果：</p><div class="language-log" data-ext="log"><pre class="language-log"><code><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span>
<span class="token operator">|</span> A    <span class="token operator">|</span> B    <span class="token operator">|</span> C    <span class="token operator">|</span>
<span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span>
<span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span>
<span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span>
</code></pre></div>`,16);function _(U,I){const n=t("router-link");return r(),c("div",null,[u,s("nav",d,[s("ul",null,[s("li",null,[p(n,{to:"#_1-uuid-函数"},{default:o(()=>[a("1. UUID 函数")]),_:1})]),s("li",null,[p(n,{to:"#_2-mysql-8-0-新特性"},{default:o(()=>[a("2. MySQL 8.0 新特性")]),_:1})])])]),i])}const h=e(k,[["render",_],["__file","uuid.html.vue"]]);export{h as default};
